{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/timers-browserify/main.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/process/browser.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///(webpack)/buildin/global.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/setimmediate/setImmediate.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/types.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","global","scope","self","window","apply","Function","setTimeout","Timeout","arguments","clearTimeout","setInterval","clearInterval","timeout","close","id","clearFn","this","_id","_clearFn","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","onTimeout","_onTimeout","setImmediate","clearImmediate","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","e","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","len","run","nextTick","args","Array","push","Item","array","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","factory","finallyConstructor","callback","constructor","then","resolve","reason","reject","setTimeoutFunc","fn","thisArg","Promise","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","promise","ret","newValue","finale","_unhandledRejectionFn","Handler","done","ex","prom","all","arr","slice","remaining","res","val","race","values","err","console","warn","globalNS","__webpack_exports__","isWindows","isWeb","globals","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","_language","_translationsConfigFile","isElectronRenderer","electron","type","navigator","platform","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","userAgent","indexOf","language","_platform","isMacintosh","isLinux","isNative","_globals","_setImmediate","OS","g","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","registerImmediate","task","runIfPresent","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","Math","random","onGlobalMessage","event","source","data","addEventListener","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","documentElement","script","createElement","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","getPrototypeOf","toString","ErrorHandler","errorHandler","unexpectedErrorHandler","stack","message","forEach","listener","onUnexpectedError","onUnexpectedExternalError","isPromiseCanceledError","transformErrorForSerialization","error","name_1","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","isDisposable","thing","dispose","lifecycle_dispose","first","rest","_i","isArray","combinedDisposable","disposables","toDisposable","Disposable","_toDispose","_lifecycle_disposable_isDisposed","_register","None","freeze","ImmortalReference","_typeof","number","string","function","isString","str","String","isObject","obj","RegExp","Date","isNumber","Number","isNaN","isBoolean","isUndefined","isUndefinedOrNull","types_hasOwnProperty","isEmptyObject","isFunction","validateConstraints","constraints","min","validateConstraint","arg","constraint","_a","ctor","isNativeClass","getAllPropertyNames","proto","getOwnPropertyNames","__extends","extendStatics","b","setPrototypeOf","__proto__","__","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","_this","req","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","result","detail","strMsg","stringify","SimpleWorkerClient","_super","workerFactory","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","require","getConfig","requirejs","contexts","_","config","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","simpleWorker_SimpleWorkerServer","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","initialize","loaderConfig","methods","prop","baseUrl","paths","vs","catchError","handlerModule","_b","simpleWorker_create","tail","tail2","equals","one","other","itemEquals","a","binarySearch","comparator","low","high","mid","comp","findFirstInSorted","floor","mergeSort","compare","_sort","_merge","lo","hi","aux","leftIdx","rightIdx","groupBy","currentGroup","element","coalesce","filter","isFalsyOrEmpty","isNonEmptyArray","distinct","keyFn","position","seen","elem","firstIndex","notFoundValue","index","flatten","arrays_range","to","from","arrayInsert","target","insertIndex","insertArr","before","after","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","pos","charCodeAt","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","MaxDifferencesHistory","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","changes","ComputeDiffRecursive","PrettifyChanges","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","max","numDifferences","maxDifferences","numDiagonals","delta","tempOriginalIndex","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","iterator_extends","FIN","Iterator","_empty","next","empty","fromArray","elements","map","iterator","collect","getSequenceIterator","ArrayIterator","ArrayNavigator","items","start","end","current","previous","last","parent","MappedIterator","uri_extends","uri_a","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_validateUri","_strict","scheme","authority","path","query","fragment","_referenceResolution","_slash","_regexp","uri_URI","URI","schemeOrData","isUri","fsPath","with","_makeFsPath","configurable","_URI","match","exec","decodeURIComponent","file","replace","idx","substring","components","skipEncoding","_asFormatted","toJSON","revive","_fsPath","_formatted","external","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","code","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","fromCharCode","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","aColumn","bColumn","clone","lift","isIPosition","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","aExists","bExists","compareRangesUsingEnds","spansMultipleLines","isFalsyOrWhitespace","trim","pad","char","join","_formatRegexp","format","group","parseInt","strings_escape","escapeRegExpCharacters","haystack","needle","trimmed","rtrim","ltrim","needleLen","offset","haystackLen","lastIndexOf","convertSimple2RegExpPattern","pattern","startsWith","endsWith","diff","createRegExp","searchString","isRegex","options","wholeWord","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","regexp","lastIndex","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","equalsIgnoreCase","len1","len2","doEqualsIgnoreCase","stopAt","codeA","codeB","startsWithIgnoreCase","candidate","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","isFullWidthCharacter","UTF8_BOM_CHARACTER","startsWithUTF8BOM","safeBtoa","btoa","repeat","count","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffAlgo","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","defaultValue","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","matchingLength","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","now","Uint8Matrix","rows","cols","Uint8Array","_data","row","set","toUint8","v","toUint32","toUint32Array","Uint32Array","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","prefixSumValidIndex","Int32Array","getCount","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","midStop","midStart","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","mirrorTextModel_MirrorTextModel","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","split","newLengths","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","USUAL_WORD_SEPARATORS_1","sep","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","getWordAtPosFast","textOffset","matchIndex","word","getWordAtPosSlow","getWordAtText","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","CharacterSet","add","has","linkComputer_StateMachine","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","functional_once","didCall","Node","linkedList_LinkedList","LinkedList","_size","_first","unshift","_insert","atTheEnd","newNode","oldLast","_last","prev","oldFirst","_remove","shift","node","anchor","event_Event","Event","_disposable","thisArgs","didFire","snapshot","each","signal","any","events","reduce","merge","initial","output","emitter","event_Emitter","onFirstListenerAdd","fire","onLastListenerRemove","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","_output","stopwatch","latch","firstCall","cache","shouldEmit","buffer","_buffer","flush","onFirstListenerDidAdd","echo","onListenerDidAdd","ChainableEvent","chain","fromNodeEventEmitter","eventName","fromPromise","toPromise","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","clear","check","listenerCount","threshold","topStack_1","topCount_1","Emitter","_disposed","_options","_leakageMon","_event","_listeners","firstListener","remove","removeMonitor","size","_noop","hasListeners","_deliveryQueue","iter","event_1","event_EventMultiplexer","EventMultiplexer","hook","unhook","EventBufferer","buffers","wrapEvent","bufferEvents","pop","event_Relay","Relay","listening","inputEvent","inputEventListener","shortcutEvent","context","cancellation_CancellationToken","CancellationToken","isCancellationToken","Cancelled","cancellation_MutableToken","isCancellationRequested","onCancellationRequested","MutableToken","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","chordPart","createKeybinding","keybinding","keyCodes_ChordKeybinding","createSimpleKeybinding","ctrlCmd","winCtrl","ctrlKey","shiftKey","altKey","metaKey","SimpleKeybinding","isModifierKey","toChord","isDuplicateModifierCase","ChordKeybinding","parts","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","selection_extends","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","Token","TokenizationResult","tokens","endState","TokenizationResult2","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","standaloneBase_KeyMod","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","Uri","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","ranges","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_BaseEditorSimpleWorker","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","foreignModuleFactory","_models","_getModel","_getModels","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","BaseEditorSimpleWorker","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","diffComputer","identical","_modelsAreIdentical","originalLineCount","modifiedLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","aRng","bRng","_diffLimit","editOffset","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","fmr","editorSimpleWorker_create","monaco","initialized","foreignModule","editorWorker","simpleWorker"],"mappings":"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","file":"js/vs/editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"s5Qh\");\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nelse if (typeof process === 'object') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = 1 /* Mac */;\n    }\n    else if (_isWindows) {\n        _platform = 3 /* Windows */;\n    }\n    else if (_isLinux) {\n        _platform = 2 /* Linux */;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","export function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n        this._lifecycle_disposable_isDisposed = false;\n    }\n    Disposable.prototype.dispose = function () {\n        this._lifecycle_disposable_isDisposed = true;\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        if (this._lifecycle_disposable_isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\nexport { Disposable };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    if (typeof (str) === _typeof.string || str instanceof String) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === _typeof.object\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return typeof (obj) === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return typeof obj === _typeof.function;\n}\nexport function validateConstraints(args, constraints) {\n    var len = Math.min(args.length, constraints.length);\n    for (var i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n    }\n}\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var _a;\n    if (isNativeClass(ctor)) {\n        return new ((_a = ctor).bind.apply(_a, [void 0].concat(args)))();\n    }\n    else {\n        var obj = Object.create(ctor.prototype);\n        ctor.apply(obj, args);\n        return obj;\n    }\n}\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing) {\n    return typeof thing === 'function'\n        && thing.hasOwnProperty('prototype')\n        && !thing.hasOwnProperty('arguments');\n}\n/**\n *\n *\n */\nexport function getAllPropertyNames(obj) {\n    var res = [];\n    var proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { getAllPropertyNames } from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var _this = this;\n        var req = String(++this._lastSentReq);\n        return new Promise(function (resolve, reject) {\n            _this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            _this._send({\n                vsWorker: _this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n            return;\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return Promise.resolve(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._lazyProxy = new Promise(function (resolve, reject) {\n            lazyProxyReject = reject;\n            _this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                    var methodName = availableMethods_1[_i];\n                    proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                }\n                resolve(proxy);\n            }, function (e) {\n                reject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        return this._lazyProxy;\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._requestHandler); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise(function (resolve, reject) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                if (!_this._requestHandler) {\n                    reject(new Error(\"No RequestHandler!\"));\n                    return;\n                }\n                var methods = [];\n                for (var _a = 0, _b = getAllPropertyNames(_this._requestHandler); _a < _b.length; _a++) {\n                    var prop = _b[_a];\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                resolve(methods);\n            }, reject);\n        });\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n) {\n    if (n === void 0) { n = 0; }\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals) {\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort(data, compare) {\n    _sort(data, compare, 0, data.length - 1, []);\n    return data;\n}\nfunction _merge(a, compare, lo, mid, hi, aux) {\n    var leftIdx = lo, rightIdx = mid + 1;\n    for (var i = lo; i <= hi; i++) {\n        aux[i] = a[i];\n    }\n    for (var i = lo; i <= hi; i++) {\n        if (leftIdx > mid) {\n            // left side consumed\n            a[i] = aux[rightIdx++];\n        }\n        else if (rightIdx > hi) {\n            // right side consumed\n            a[i] = aux[leftIdx++];\n        }\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n            // right element is less -> comes first\n            a[i] = aux[rightIdx++];\n        }\n        else {\n            // left element comes first (less or equal)\n            a[i] = aux[leftIdx++];\n        }\n    }\n}\nfunction _sort(a, compare, lo, hi, aux) {\n    if (hi <= lo) {\n        return;\n    }\n    var mid = lo + ((hi - lo) / 2) | 0;\n    _sort(a, compare, lo, mid, aux);\n    _sort(a, compare, mid + 1, hi, aux);\n    if (compare(a[mid], a[mid + 1]) <= 0) {\n        // left and right are sorted and if the last-left element is less\n        // or equals than the first-right element there is nothing else\n        // to do\n        return;\n    }\n    _merge(a, compare, lo, mid, hi, aux);\n}\nexport function groupBy(data, compare) {\n    var result = [];\n    var currentGroup = undefined;\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    if (!array) {\n        return array;\n    }\n    return array.filter(function (e) { return !!e; });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct(array, keyFn) {\n    if (!keyFn) {\n        return array.filter(function (element, position) {\n            return array.indexOf(element) === position;\n        });\n    }\n    var seen = Object.create(null);\n    return array.filter(function (elem) {\n        var key = keyFn(elem);\n        if (seen[key]) {\n            return false;\n        }\n        seen[key] = true;\n        return true;\n    });\n}\nexport function firstIndex(array, fn) {\n    for (var i = 0; i < array.length; i++) {\n        var element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function first(array, fn, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = null; }\n    var index = firstIndex(array, fn);\n    return index < 0 ? notFoundValue : array[index];\n}\nexport function flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\nexport function range(arg, to) {\n    var from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    var result = [];\n    if (from <= to) {\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (var i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    var before = target.slice(0, insertIndex);\n    var after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.PrettifyChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex = 0, modifiedIndex = 0;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\n        // Shift all the changes down first\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            var mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            var result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            var result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var FIN = { done: true, value: undefined };\nexport var Iterator;\n(function (Iterator) {\n    var _empty = {\n        next: function () {\n            return FIN;\n        }\n    };\n    function empty() {\n        return _empty;\n    }\n    Iterator.empty = empty;\n    function fromArray(array, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = array.length; }\n        return {\n            next: function () {\n                if (index >= length) {\n                    return FIN;\n                }\n                return { done: false, value: array[index++] };\n            }\n        };\n    }\n    Iterator.fromArray = fromArray;\n    function from(elements) {\n        if (!elements) {\n            return Iterator.empty();\n        }\n        else if (Array.isArray(elements)) {\n            return Iterator.fromArray(elements);\n        }\n        else {\n            return elements;\n        }\n    }\n    Iterator.from = from;\n    function map(iterator, fn) {\n        return {\n            next: function () {\n                var element = iterator.next();\n                if (element.done) {\n                    return FIN;\n                }\n                else {\n                    return { done: false, value: fn(element.value) };\n                }\n            }\n        };\n    }\n    Iterator.map = map;\n    function filter(iterator, fn) {\n        return {\n            next: function () {\n                while (true) {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return FIN;\n                    }\n                    if (fn(element.value)) {\n                        return { done: false, value: element.value };\n                    }\n                }\n            }\n        };\n    }\n    Iterator.filter = filter;\n    function forEach(iterator, fn) {\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\n            fn(next.value);\n        }\n    }\n    Iterator.forEach = forEach;\n    function collect(iterator) {\n        var result = [];\n        forEach(iterator, function (value) { return result.push(value); });\n        return result;\n    }\n    Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\nexport function getSequenceIterator(arg) {\n    if (Array.isArray(arg)) {\n        return Iterator.fromArray(arg);\n    }\n    else {\n        return arg;\n    }\n}\nvar ArrayIterator = /** @class */ (function () {\n    function ArrayIterator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    ArrayIterator.prototype.next = function () {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    };\n    ArrayIterator.prototype.current = function () {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    };\n    return ArrayIterator;\n}());\nexport { ArrayIterator };\nvar ArrayNavigator = /** @class */ (function (_super) {\n    __extends(ArrayNavigator, _super);\n    function ArrayNavigator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        return _super.call(this, items, start, end, index) || this;\n    }\n    ArrayNavigator.prototype.current = function () {\n        return _super.prototype.current.call(this);\n    };\n    ArrayNavigator.prototype.previous = function () {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    };\n    ArrayNavigator.prototype.first = function () {\n        this.index = this.start;\n        return this.current();\n    };\n    ArrayNavigator.prototype.last = function () {\n        this.index = this.end - 1;\n        return this.current();\n    };\n    ArrayNavigator.prototype.parent = function () {\n        return null;\n    };\n    return ArrayNavigator;\n}(ArrayIterator));\nexport { ArrayNavigator };\nvar MappedIterator = /** @class */ (function () {\n    function MappedIterator(iterator, fn) {\n        this.iterator = iterator;\n        this.fn = fn;\n        // noop\n    }\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n    return MappedIterator;\n}());\nexport { MappedIterator };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme) {\n        if (_strict || _throwOnMissingSchema) {\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n        else {\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new postion from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    Position.prototype.with = function (newLineNumber, newColumn) {\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n        if (newColumn === void 0) { newColumn = this.column; }\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    };\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n        if (deltaColumn === void 0) { deltaColumn = 0; }\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    };\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        if (a && b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                var aStartColumn = a.startColumn | 0;\n                var bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    var aEndLineNumber = a.endLineNumber | 0;\n                    var bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        var aEndColumn = a.endColumn | 0;\n                        var bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        var aExists = (a ? 1 : 0);\n        var bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid = 0;\n        var midStop = 0;\n        var midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\nexport { StateMachine };\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model, stateMachine) {\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = void 0;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\nexport { LinkComputer };\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FIN } from './iterator.js';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        return this._remove.bind(this, newNode);\n    };\n    LinkedList.prototype.shift = function () {\n        if (!this._first) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        var candidate = this._first;\n        while (candidate instanceof Node) {\n            if (candidate !== node) {\n                candidate = candidate.next;\n                continue;\n            }\n            if (candidate.prev && candidate.next) {\n                // middle\n                var anchor = candidate.prev;\n                anchor.next = candidate.next;\n                candidate.next.prev = anchor;\n            }\n            else if (!candidate.prev && !candidate.next) {\n                // only node\n                this._first = undefined;\n                this._last = undefined;\n            }\n            else if (!candidate.next) {\n                // last\n                this._last = this._last.prev;\n                this._last.next = undefined;\n            }\n            else if (!candidate.prev) {\n                // first\n                this._first = this._first.next;\n                this._first.prev = undefined;\n            }\n            // done\n            this._size -= 1;\n            break;\n        }\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    return FIN;\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            // we need this, in case the event fires during the listener call\n            var didFire = false;\n            var result;\n            result = event(function (e) {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * throught the mapping function.\n     */\n    function map(event, map) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        });\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n        });\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        });\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    /**\n     * Given a collection of events, returns a single event which emits\n     * whenever any of the provided events emit.\n     */\n    function any() {\n        var events = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            events[_i] = arguments[_i];\n        }\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n        };\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        var output = initial;\n        return map(event, function (e) {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        var listener;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove: function () {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\n        if (delay === void 0) { delay = 100; }\n        if (leading === void 0) { leading = false; }\n        var subscription;\n        var output = undefined;\n        var handle = undefined;\n        var numDebouncedCalls = 0;\n        var emitter = new Emitter({\n            leakWarningThreshold: leakWarningThreshold,\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        var start = new Date().getTime();\n        return map(once(event), function (_) { return new Date().getTime() - start; });\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        var firstCall = true;\n        var cache;\n        return filter(event, function (value) {\n            var shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick, _buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (_buffer === void 0) { _buffer = []; }\n        var buffer = _buffer.slice();\n        var listener = event(function (e) {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        var flush = function () {\n            if (buffer) {\n                buffer.forEach(function (e) { return emitter.fire(e); });\n            }\n            buffer = null;\n        };\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                if (!listener) {\n                    listener = event(function (e) { return emitter.fire(e); });\n                }\n            },\n            onFirstListenerDidAdd: function () {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove: function () {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Similar to `buffer` but it buffers indefinitely and repeats\n     * the buffered events to every new listener.\n     */\n    function echo(event, nextTick, buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (buffer === void 0) { buffer = []; }\n        buffer = buffer.slice();\n        event(function (e) {\n            buffer.push(e);\n            emitter.fire(e);\n        });\n        var flush = function (listener, thisArgs) { return buffer.forEach(function (e) { return listener.call(thisArgs, e); }); };\n        var emitter = new Emitter({\n            onListenerDidAdd: function (emitter, listener, thisArgs) {\n                if (nextTick) {\n                    setTimeout(function () { return flush(listener, thisArgs); });\n                }\n                else {\n                    flush(listener, thisArgs);\n                }\n            }\n        });\n        return emitter.event;\n    }\n    Event.echo = echo;\n    var ChainableEvent = /** @class */ (function () {\n        function ChainableEvent(event) {\n            this.event = event;\n        }\n        ChainableEvent.prototype.map = function (fn) {\n            return new ChainableEvent(map(this.event, fn));\n        };\n        ChainableEvent.prototype.forEach = function (fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        };\n        ChainableEvent.prototype.filter = function (fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        };\n        ChainableEvent.prototype.reduce = function (merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        };\n        ChainableEvent.prototype.latch = function () {\n            return new ChainableEvent(latch(this.event));\n        };\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        };\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        };\n        return ChainableEvent;\n    }());\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map) {\n        if (map === void 0) { map = function (id) { return id; }; }\n        var fn = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return result.fire(map.apply(void 0, args));\n        };\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromPromise(promise) {\n        var emitter = new Emitter();\n        var shouldEmit = false;\n        promise\n            .then(undefined, function () { return null; })\n            .then(function () {\n            if (!shouldEmit) {\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(function (c) { return once(event)(c); });\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nvar _globalLeakWarningThreshold = -1;\nvar LeakageMonitor = /** @class */ (function () {\n    function LeakageMonitor(customThreshold, name) {\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    LeakageMonitor.prototype.dispose = function () {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    };\n    LeakageMonitor.prototype.check = function (listenerCount) {\n        var _this = this;\n        var threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        var count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            var topStack_1;\n            var topCount_1 = 0;\n            this._stacks.forEach(function (count, stack) {\n                if (!topStack_1 || topCount_1 < count) {\n                    topStack_1 = stack;\n                    topCount_1 = count;\n                }\n            });\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n            console.warn(topStack_1);\n        }\n        return function () {\n            var count = (_this._stacks.get(stack) || 0);\n            _this._stacks.set(stack, count - 1);\n        };\n    };\n    return LeakageMonitor;\n}());\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(options) {\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n            : undefined;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    // check and record this emitter for potential leakage\n                    var removeMonitor;\n                    if (_this._leakageMon) {\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            if (removeMonitor) {\n                                removeMonitor();\n                            }\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove) {\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                    if (!hasListeners) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        if (this._leakageMon) {\n            this._leakageMon.dispose();\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        var r = fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n        return r;\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        var _this = this;\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: function () {\n                _this.listening = true;\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n            },\n            onLastListenerRemove: function () {\n                _this.listening = false;\n                _this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.inputEvent = event;\n            if (this.listening) {\n                this.inputEventListener.dispose();\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    SimpleKeybinding.prototype.toChord = function () {\n        return new ChordKeybinding([this]);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(\"parts\");\n        }\n        this.parts = parts;\n    }\n    ChordKeybinding.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.parts.length !== other.parts.length) {\n            return false;\n        }\n        for (var i = 0; i < this.parts.length; i++) {\n            if (!this.parts[i].equals(other.parts[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './promise-polyfill/polyfill.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { mergeSort } from '../../../base/common/arrays.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { FIN } from '../../../base/common/iterator.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { getAllPropertyNames } from '../../../base/common/types.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj;\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                if (!obj) {\n                    obj = { done: false, value: value };\n                }\n                else {\n                    obj.value = value;\n                }\n                return obj;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                return FIN;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n        var content = this._lines[lineNumber - 1];\n        var ranges = this._wordenize(content, wordDefinition);\n        var words = [];\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n            var range = ranges_1[_i];\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return Promise.resolve(null);\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        var changes = diffComputer.computeDiff();\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n        return Promise.resolve({\n            identical: identical,\n            changes: changes\n        });\n    };\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n        var originalLineCount = original.getLineCount();\n        var modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (var line = 1; line <= originalLineCount; line++) {\n            var originalLine = original.getLineContent(line);\n            var modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(edits);\n        }\n        var result = [];\n        var lastEol = undefined;\n        edits = mergeSort(edits, function (a, b) {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            var aRng = a.range ? 0 : 1;\n            var bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return Promise.resolve(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var suggestions = [];\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var currentWord = model.getWordUntilPosition(position, wordDefRegExp);\n        var seen = Object.create(null);\n        seen[currentWord.word] = true;\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n            var word = e.value;\n            if (seen[word]) {\n                continue;\n            }\n            seen[word] = true;\n            if (!isNaN(Number(word))) {\n                continue;\n            }\n            suggestions.push({\n                kind: 18 /* Text */,\n                label: word,\n                insertText: word,\n                range: { startLineNumber: position.lineNumber, startColumn: currentWord.startColumn, endLineNumber: position.lineNumber, endColumn: currentWord.endColumn }\n            });\n        }\n        return Promise.resolve({ suggestions: suggestions });\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(Object.create(null));\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var result = Object.create(null);\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n            var words = model.getLineWords(line, wordDefRegExp);\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                var word = words_1[_i];\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                var array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    //#endregion\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return Promise.resolve(null);\n        }\n        var word = model.getValueInRange(wordRange);\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return Promise.resolve(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._foreignModule); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tresolve(methods);\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"sourceRoot":""}