{"version":3,"sources":["webpack:///./components/content/box/block/ConfirmationsBox.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/box/GweiValueBox.tsx","webpack:///./page/tx/TxStatus.tsx","webpack:///./page/tx/TxContent.tsx","webpack:///./helpers/getRelativeTimeTranslations.ts","webpack:///./components/content/box/TimeElapsedBox.tsx","webpack:///./components/content/box/account/AddressHashBox.tsx"],"names":["__webpack_require__","d","__webpack_exports__","ConfirmationsBox","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ethstats_ui_lib_layout_content_box_ValueBox__WEBPACK_IMPORTED_MODULE_1__","app_styled_components__WEBPACK_IMPORTED_MODULE_2__","ethstats_ui_lib_icon_StatusSomeConfirmedIcon__WEBPACK_IMPORTED_MODULE_3__","ethstats_ui_lib_icon_StatusNotConfirmedIcon__WEBPACK_IMPORTED_MODULE_4__","ethstats_ui_lib_icon_StatusConfirmedIcon__WEBPACK_IMPORTED_MODULE_5__","$ConfirmationsBox","translation","confirmations","isConfirmed","tooltipText","get","%d","colors","iconPlacement","Icon","Object","GweiValueBox_GweiValueBox","react","[object Object]","ValueBox","variant","this","props","formatGwei","wei","locale","value","BigNumberFormatter","format","minimumFractionDigits","maximumFractionDigits","TxStatus_TxStatus","TxContent_TxContent","tr","txDetails","tx","blockConfirmations","clipboard","blockDetails","block","txPayload","payload","LayoutSection","useWrapper","LayoutRow","minWidth","LayoutRowItem","Label","TxHashBox","noLink","txHash","arrow","disabled","isZero","EthValueBox","BlockNumberBox","id","creationTime","TimeElapsedBox","timestamp","blockConfirmed","NumberBox","txIndex","nonce","AddressHashBox","from","to","receipt","contractAddress","gasLimit","gasPrice","GasUsedValueBox","gasUsed","limit","multipliedBy","decimals","cumulativeGasUsed","status","ErrorIcon","fullRow","autoHeight","HexData","data","getRelativeTimeTranslations","future","past","s","ss","m","mm","h","hh","dd","M","MM","y","yy","TimeElapsedBox_TimeElapsedBox","react_default","a","Component","createElement","box_TimeElapsedBox","assign","translations","app_components_content_box_HashLinkValueBox__WEBPACK_IMPORTED_MODULE_1__","children","theme","background","addressHashBoxBg","text","valueBox","primary","linkTo","url","getAccount"],"mappings":"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","file":"js/8138f668e681b5c4ea3c.bundle.js","sourcesContent":["import * as React from \"react\";\nimport { ValueBox } from \"ethstats-ui/lib/layout/content/box/ValueBox\";\nimport { ITheme } from \"app/theme\";\nimport { withTheme } from \"app/styled-components\";\nimport { Translation } from \"app/Translation\";\nimport { StatusSomeConfirmedIcon } from \"ethstats-ui/lib/icon/StatusSomeConfirmedIcon\";\nimport { StatusNotConfirmedIcon } from \"ethstats-ui/lib/icon/StatusNotConfirmedIcon\";\nimport { StatusConfirmedIcon } from \"ethstats-ui/lib/icon/StatusConfirmedIcon\";\n\ninterface IConfirmationsBoxProps {\n    theme: ITheme;\n    translation: Translation;\n    locale: string | undefined;\n    confirmations: number;\n    isConfirmed: boolean;\n}\n\nconst $ConfirmationsBox: React.StatelessComponent<IConfirmationsBoxProps> = ({\n    translation, confirmations, isConfirmed\n}) => {\n    let tooltipText = isConfirmed ?\n        translation.get(\"blockView.content.blockConfirmations.confirmed\") :\n        translation.get(\"blockView.content.blockConfirmations.text\", {\"%d\": confirmations});\n\n    return <ValueBox colors={isConfirmed ? \"highlight\" : \"warn\"}\n        iconPlacement=\"left\"\n        Icon={isConfirmed ?\n            StatusConfirmedIcon :\n            confirmations ? StatusSomeConfirmedIcon : StatusNotConfirmedIcon}\n    >\n        { tooltipText }\n    </ValueBox>;\n};\n\nexport const ConfirmationsBox = withTheme($ConfirmationsBox);\n","import * as React from \"react\";\nimport { ValueBox, IValueBoxProps } from \"../../layout/content/box/ValueBox\";\nimport { weiToGwei } from \"../../util/internal/wei\";\nimport { BigNumberFormatter } from \"../../util/internal/locale/BigNumberFormatter\";\nimport { BigNumber } from \"../../util/BigNumber\";\n\nexport interface IGweiValueBoxProps {\n    /** Value in wei */\n    wei: BigNumber;\n    variant?: IValueBoxProps[\"variant\"];\n    locale: string;\n    colors?: IValueBoxProps[\"colors\"];\n}\n\nexport class GweiValueBox extends React.Component<IGweiValueBoxProps> {\n    render() {\n        return (\n            <ValueBox variant={this.props.variant} colors={this.props.colors}>\n                {this.formatGwei(weiToGwei(this.props.wei), this.props.locale)}\n            </ValueBox>\n        );\n    }\n\n    private formatGwei(value: BigNumber, locale: string) {\n        return new BigNumberFormatter().format(value, locale, {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 4\n        }) + \" Gwei\";\n    }\n}\n","import * as React from \"react\";\nimport { Translation } from \"app/Translation\";\nimport { ITxDetails } from \"app/data/tx/details/ITxDetails\";\n\nexport interface ITxStatusProps {\n    tx: ITxDetails;\n    translation: Translation;\n}\n\nexport class TxStatus extends React.Component<ITxStatusProps> {\n    render() {\n        // let tx = this.props.tx;\n        // let translation = this.props.translation;\n\n        return (\n            // <TooltipRegular placement=\"right\" content={\n            //     (tx.receipt.status ?\n            //         translation.get(\"txView.content.txStatus.ok\") :\n            //         translation.get(\"txView.content.txStatus.error\"))\n            // }>\n            //     <ValueBox\n            //         colors={tx.receipt.status ? \"highlight\" : \"error\"}\n            //         Icon={tx.receipt.status ? StatusOkIcon : ErrorIcon}\n            //         />\n            // </TooltipRegular>\n            <div/>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { LayoutRow } from \"ethstats-ui/lib/layout/content/LayoutRow\";\nimport { LayoutRowItem } from \"ethstats-ui/lib/layout/content/LayoutRowItem\";\nimport { Label } from \"ethstats-ui/lib/data/Label\";\nimport { TxHashBox } from \"app/components/content/box/tx/TxHashBox\";\nimport { EthValueBox } from \"ethstats-ui/lib/data/box/EthValueBox\";\nimport { BlockNumberBox } from \"app/components/content/box/block/BlockNumberBox\";\nimport { ConfirmationsBox } from \"app/components/content/box/block/ConfirmationsBox\";\nimport { NumberBox } from \"ethstats-ui/lib/data/box/NumberBox\";\nimport { AddressHashBox } from \"app/components/content/box/account/AddressHashBox\";\nimport { GweiValueBox } from \"ethstats-ui/lib/data/box/GweiValueBox\";\nimport { LayoutSection } from \"ethstats-ui/lib/layout/content/LayoutSection\";\nimport { HexData } from \"ethstats-ui/lib/data/hex/HexData\";\nimport { Translation } from \"app/Translation\";\nimport { ITxDetails } from \"app/data/tx/details/ITxDetails\";\nimport { TxStatus } from \"app/page/tx/TxStatus\";\nimport { Clipboard } from \"app/helpers/Clipboard\";\nimport { ILogger } from \"app/util/log/ILogger\";\nimport { GasUsedValueBox } from \"ethstats-ui/lib/data/box/GasUsedValueBox\";\nimport { ValueBox } from \"ethstats-ui/lib/layout/content/box/ValueBox\";\nimport { ErrorIcon } from \"ethstats-ui/lib/icon/ErrorIcon\";\nimport { IBlockDetails } from \"app/data/block/details/IBlockDetails\";\nimport { TimeElapsedBox } from \"app/components/content/box/TimeElapsedBox\";\n\nexport interface ITxContentProps {\n    txHash: string;\n    txDetails: ITxDetails;\n    blockDetails: IBlockDetails;\n    /** If it's a mined tx, pass the number of confirmations for parent block */\n    blockConfirmations: number | undefined;\n    blockConfirmed: boolean;\n    translation: Translation;\n    locale: string;\n    clipboard: Clipboard;\n    logger: ILogger;\n}\n\nexport class TxContent extends React.PureComponent<ITxContentProps> {\n    render() {\n        let { translation: tr, txDetails: tx, locale, blockConfirmations, clipboard, blockDetails: block } = this.props;\n        let txPayload = tx ? tx.payload : void 0;\n\n        return <>\n            <LayoutSection useWrapper>\n                <LayoutRow minWidth={960}>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"general.hash\")}</Label>\n                        <TxHashBox noLink clipboard={clipboard}>{this.props.txHash}</TxHashBox>\n                    </LayoutRowItem>\n                    <LayoutRowItem>\n                        <Label arrow disabled={tx.value.isZero()}>{tr.get(\"txView.content.txValue.label\")}</Label>\n                        <EthValueBox wei={tx.value} locale={locale} />\n                        <TxStatus tx={tx} translation={tr} />\n                    </LayoutRowItem>\n                </LayoutRow>\n                <LayoutRow minWidth={780}>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"blockView.content.blockNumber.label\")}</Label>\n                        <BlockNumberBox>{tx.block.id}</BlockNumberBox>\n                    </LayoutRowItem>\n                    <LayoutRowItem>\n                        {block && block.creationTime ?\n                            <>\n                                <Label>{tr.get(\"blockView.content.blockCreationTime.label\")}</Label>\n                                <TimeElapsedBox timestamp={block.creationTime}\n                                    translation={tr}\n                                    locale={locale}\n                                    clipboard={clipboard} />\n                            </>\n                            : null}\n                        {blockConfirmations !== void 0 ?\n                            <ConfirmationsBox\n                                translation={tr}\n                                locale={locale}\n                                confirmations={blockConfirmations}\n                                isConfirmed={this.props.blockConfirmed}\n                            />\n                            : null}\n                    </LayoutRowItem>\n                </LayoutRow>\n                <LayoutRow minWidth={650}>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"txView.content.txIndex.label\")}</Label>\n                        <NumberBox value={tx.txIndex} locale={locale} />\n                    </LayoutRowItem>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"general.nonce\")}</Label>\n                        <NumberBox value={tx.nonce} locale={locale} />\n                    </LayoutRowItem>\n                </LayoutRow>\n                <LayoutRow minWidth={650}>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"general.from\")}</Label>\n                        <AddressHashBox clipboard={clipboard}>{tx.from}</AddressHashBox>\n                    </LayoutRowItem>\n                    { tx.to && <LayoutRowItem>\n                        <Label>{tr.get(\"general.to\")}</Label>\n                        <AddressHashBox clipboard={clipboard}>{tx.to}</AddressHashBox>\n                    </LayoutRowItem> }\n                    { tx.receipt && tx.receipt.contractAddress && <LayoutRowItem>\n                        <Label>{tr.get(\"general.creates\")}</Label>\n                        <AddressHashBox clipboard={clipboard}>{tx.receipt.contractAddress}</AddressHashBox>\n                    </LayoutRowItem> }\n                </LayoutRow>\n            </LayoutSection>\n            <LayoutSection useWrapper>\n                <LayoutRow minWidth={600}>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"general.gasLimit\")}</Label>\n                        <NumberBox value={tx.gasLimit} locale={locale} />\n                    </LayoutRowItem>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"general.gasPrice\")}</Label>\n                        <GweiValueBox wei={tx.gasPrice} locale={locale} />\n                    </LayoutRowItem>\n                </LayoutRow>\n                {tx.receipt ?\n                <LayoutRow minWidth={750}>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"txView.content.gasUsed.label\")}</Label>\n                        <GasUsedValueBox value={tx.receipt.gasUsed} limit={tx.gasLimit} locale={locale} />\n                    </LayoutRowItem>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"txView.content.txFee.label\")}</Label>\n                        <EthValueBox wei={tx.receipt.gasUsed.multipliedBy(tx.gasPrice)} decimals={9} locale={locale} />\n                    </LayoutRowItem>\n                </LayoutRow> : null }\n                {tx.receipt ?\n                <LayoutRow>\n                    <LayoutRowItem>\n                        <Label>{tr.get(\"txView.content.cumulativeGasUsed.label\")}</Label>\n                        <NumberBox value={tx.receipt.cumulativeGasUsed} locale={locale} />\n                    </LayoutRowItem>\n                </LayoutRow> : null }\n            </LayoutSection>\n            {tx.receipt && !tx.receipt.status ?\n            <LayoutSection>\n                    <LayoutRow>\n                        <LayoutRowItem>\n                            <Label>{tr.get(\"txView.content.error.label\")}</Label>\n                            <ValueBox colors=\"error\">{tr.get(\"txView.content.error.genericValue\")}</ValueBox>\n                            <ErrorIcon />\n                        </LayoutRowItem>\n                    </LayoutRow>\n            </LayoutSection> : null }\n            { txPayload ?\n                <LayoutRow>\n                    <LayoutRowItem fullRow autoHeight>\n                        <Label>{tr.get(\"txView.content.inputData.label\")}</Label>\n                        <HexData data={txPayload} clipboard={clipboard} />\n                    </LayoutRowItem>\n                </LayoutRow>\n            : null }\n        </>;\n    }\n}\n","import { Translation } from \"app/Translation\";\n\nexport function getRelativeTimeTranslations(translation: Translation) {\n    return {\n        future: translation.get(\"general.relativeTime.future\"),\n        past: translation.get(\"general.relativeTime.past\"),\n        s: translation.get(\"general.relativeTime.s\"),\n        ss: translation.get(\"general.relativeTime.ss\"),\n        m: translation.get(\"general.relativeTime.m\"),\n        mm: translation.get(\"general.relativeTime.mm\"),\n        h: translation.get(\"general.relativeTime.h\"),\n        hh: translation.get(\"general.relativeTime.hh\"),\n        d: translation.get(\"general.relativeTime.d\"),\n        dd: translation.get(\"general.relativeTime.dd\"),\n        M: translation.get(\"general.relativeTime.M\"),\n        MM: translation.get(\"general.relativeTime.MM\"),\n        y: translation.get(\"general.relativeTime.y\"),\n        yy: translation.get(\"general.relativeTime.yy\")\n    };\n}\n","import {\n    TimeElapsedBox as TimeElapsedBoxBase,\n    ITimeElapsedBoxProps as ITimeElapsedBoxPropsBase } from \"ethstats-ui/lib/data/box/TimeElapsedBox\";\nimport { Translation } from \"app/Translation\";\nimport React from \"react\";\nimport { getRelativeTimeTranslations } from \"app/helpers/getRelativeTimeTranslations\";\n\nexport interface ITimeElapsedBoxProps\n    extends Pick<ITimeElapsedBoxPropsBase, Exclude<keyof ITimeElapsedBoxPropsBase, \"translations\">> {\n    translation: Translation;\n}\n\nexport class TimeElapsedBox extends React.Component<ITimeElapsedBoxProps> {\n    render() {\n        return <TimeElapsedBoxBase {...this.props}\n            translations={getRelativeTimeTranslations(this.props.translation)} />;\n    }\n}\n","import * as React from \"react\";\nimport { HashLinkValueBox } from \"app/components/content/box/HashLinkValueBox\";\nimport { IValueBoxProps } from \"ethstats-ui/lib/layout/content/box/ValueBox\";\nimport { Clipboard } from \"app/helpers/Clipboard\";\nimport { ITheme } from \"app/theme\";\n\ninterface IAddressHashBoxProps {\n    variant?: IValueBoxProps[\"variant\"];\n    children: string;\n    Icon?: IValueBoxProps[\"Icon\"];\n    noLink?: boolean;\n    clipboard: Clipboard;\n}\n\nexport const AddressHashBox: React.StatelessComponent<IAddressHashBoxProps> = ({\n    children, variant, Icon, noLink, clipboard\n}) => (\n    <HashLinkValueBox\n        colors={(theme: ITheme) => ({\n            background: theme.colors.addressHashBoxBg,\n            text: theme.colors.valueBox.primary.text\n        })}\n        variant={variant}\n        Icon={Icon}\n        linkTo={!noLink ? url => url.getAccount(children) : void 0}\n        clipboard={clipboard}\n    >\n        { children }\n    </HashLinkValueBox>\n);\n"],"sourceRoot":""}