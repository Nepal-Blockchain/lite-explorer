{"version":3,"sources":["webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/fontfaceobserver/fontfaceobserver.standalone.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/overlay/FloatingActionBar.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/Label.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/internal/LayoutRowWrapper.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/LayoutRow.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/icon/QrCodeIcon.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/Number.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/internal/locale/NumberFormatter.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/react/ScrollIntoView.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/internal/locale/numberFormat.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/internal/locale/BigNumberFormatter.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/control/accordion/AccordionItemState.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/control/accordion/internal/AccordionState.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/control/accordion/internal/AccordionContentWrapper.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/fx/Height.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/control/accordion/AccordionHorizontal.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/icon/SwitchIcon.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/control/accordion/AccordionItemContentStatus.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/control/accordion/AccordionContentFrame.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/icon/ArrowDownIcon.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/control/expander/ExpanderIcon.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/control/expander/Expander.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/LayoutBoxItem.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/LayoutRowItem.tsx"],"names":["l","a","b","document","addEventListener","attachEvent","m","body","c","removeEventListener","k","readyState","detachEvent","t","this","createElement","setAttribute","appendChild","createTextNode","h","f","g","style","cssText","u","z","offsetWidth","width","scrollLeft","scrollWidth","A","parentNode","B","family","weight","stretch","C","D","E","F","G","J","test","window","navigator","vendor","exec","userAgent","parseInt","fonts","K","font","L","join","prototype","load","r","n","H","Date","getTime","Promise","M","e","Error","then","length","setTimeout","N","race","clearTimeout","v","w","x","y","d","removeChild","I","hidden","p","q","dir","module","exports","__webpack_require__","__webpack_exports__","FloatingActionBar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_styled_components__WEBPACK_IMPORTED_MODULE_1__","FloatingActionBarRoot","Object","props","position","[object Object]","assign","children","Label","_styled_components__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","$Label","className","arrow","disabled","theme","colors","arrowLabelBgDisabled","arrowLabelBg","arrowLabel","label","LayoutRowWrapper_$LayoutRowWrapper","react","divWidth","onResize","handleResize","divElement","clientWidth","ref","LayoutRowWrapper","styled_components","smallScreen","centerContent","LayoutRow_LayoutRow","LayoutRow","isFirstLabelIgnored","minWidth","responsive","ignoreFirstLabel","childIsLayoutRowItem","childType","type","_brand","i","map","isLayoutRowItemInstance","isBeginningOfRow","fullRow","tslib_es6","mobx_module","index_module","QrCodeIcon","_util_react_SvgIcon__WEBPACK_IMPORTED_MODULE_1__","stroke","strokeWidth","fill","fillRule","points","Number","_util_internal_locale_NumberFormatter__WEBPACK_IMPORTED_MODULE_1__","_util_internal_locale_BigNumberFormatter__WEBPACK_IMPORTED_MODULE_2__","value","locale","format","NumberFormatter","toLocaleString","ScrollIntoView","_DomNodeProxy__WEBPACK_IMPORTED_MODULE_1__","scrollTimeoutId","scrollIntoView","behavior","delay","onMount","onUnmount","getNumberSeparator","separatorType","numberFormat","Intl","NumberFormat","formatToParts","find","part","replace","BigNumberFormatter_BigNumberFormatter","fmt","formats","get","decimalSeparator","groupSeparator","groupSize","set","num","options","getBnFormat","decimalPlaces","maximumFractionDigits","minimumFractionDigits","fractionDigits","toFormat","Map","AccordionItemState_AccordionItemState","_contentStatus","AccordionItemContentStatus","NotLoaded","content","contentStatus","_content","AccordionState_AccordionState","onError","handleItemClick","item","activeItem","onItemExpanded","items","itemConfigs","idx","index","config","onClick","resetContent","updateContent","Loaded","shallow","AccordionContentWrapper_AccordionContentWrapper","status","arrowPosition","loadingDelay","loadingText","errorText","contentEl","renderContent","AccordionContentFrame","Fade","duration","display","SpinnerRegular","ValueBox","ErrorIcon","CLASS_NAME","HeightRoot","computedHeight","Height_Height","Height","handleRef","contentRef","updateHeight","contentHeight","react_transition_group","key","timeout","classNames","unmountOnExit","overflowY","height","prevProps","offsetHeight","AccordionHorizontal_AccordionHorizontal","AccordionHorizontal","super","expanderEls","handleContainerRef","containerOffsetLeft","offsetLeft","accordionState","onContentError","buildItems","LayoutRowItem","noDataContent","getItems","getActiveItem","renderExpander","isOpen","contentAnimSeconds","getContentArrowPosition","DomNodeProxy","delete","size","has","RangeError","expanderEl","expanderWidth","defaultProps","SwitchIcon","ARROW_OFFSET_TOP","AccordionContentFrameRoot","noBorder","borderColor","backgroundColor","$AccordionContentFrame","accordionBg","accordionBorder","ArrowDownIcon_ArrowDownIcon","SvgIcon","ExpanderIconRoot","expanded","expanderOpenIcon","expanderIcon","Icon","ExpanderIcon_ExpanderIcon","Expander_Expander","ExpanderRoot","ExpanderLabel","div","ExpanderValue","expanderDisabled","open","expanderOpenValue","expanderValue","StyledValueBox","ExpanderContent","fullWidth","handleClick","background","expanderOpenBg","expanderBg","text","expanderOpenLabel","expanderLabel","variant","data_Number","$LayoutBoxItem","LayoutBoxItem","autoHeight","baseHeight","autoWidth","justifyContent","mediaQueries","breakPoints","smallerThanFullView","lessThan620px","LayoutRowItem_LayoutRowItem","$LayoutRowItemWrapper","LayoutRowItemWrapper","$LayoutInfoBoxItem","LayoutInfoBoxItem","childrenArray","toArray","reduce","outArr","child","react_is","push","console","error","labelElement","shift","childrenArrayRender"],"mappings":"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","file":"js/85eb35920202eb566738.bundle.js","sourcesContent":["/* Font Face Observer v2.1.0 - © Bram Stein. License: BSD-3-Clause */(function(){function l(a,b){document.addEventListener?a.addEventListener(\"scroll\",b,!1):a.attachEvent(\"scroll\",b)}function m(a){document.body?a():document.addEventListener?document.addEventListener(\"DOMContentLoaded\",function c(){document.removeEventListener(\"DOMContentLoaded\",c);a()}):document.attachEvent(\"onreadystatechange\",function k(){if(\"interactive\"==document.readyState||\"complete\"==document.readyState)document.detachEvent(\"onreadystatechange\",k),a()})};function t(a){this.a=document.createElement(\"div\");this.a.setAttribute(\"aria-hidden\",\"true\");this.a.appendChild(document.createTextNode(a));this.b=document.createElement(\"span\");this.c=document.createElement(\"span\");this.h=document.createElement(\"span\");this.f=document.createElement(\"span\");this.g=-1;this.b.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.c.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\nthis.f.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.h.style.cssText=\"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}\nfunction u(a,b){a.a.style.cssText=\"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\"+b+\";\"}function z(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+\"px\";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function A(a,b){function c(){var a=k;z(a)&&a.a.parentNode&&b(a.g)}var k=a;l(a.b,c);l(a.c,c);z(a)};function B(a,b){var c=b||{};this.family=a;this.style=c.style||\"normal\";this.weight=c.weight||\"normal\";this.stretch=c.stretch||\"normal\"}var C=null,D=null,E=null,F=null;function G(){if(null===D)if(J()&&/Apple/.test(window.navigator.vendor)){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(window.navigator.userAgent);D=!!a&&603>parseInt(a[1],10)}else D=!1;return D}function J(){null===F&&(F=!!document.fonts);return F}\nfunction K(){if(null===E){var a=document.createElement(\"div\");try{a.style.font=\"condensed 100px sans-serif\"}catch(b){}E=\"\"!==a.style.font}return E}function L(a,b){return[a.style,a.weight,K()?a.stretch:\"\",\"100px\",b].join(\" \")}\nB.prototype.load=function(a,b){var c=this,k=a||\"BESbswy\",r=0,n=b||3E3,H=(new Date).getTime();return new Promise(function(a,b){if(J()&&!G()){var M=new Promise(function(a,b){function e(){(new Date).getTime()-H>=n?b(Error(\"\"+n+\"ms timeout exceeded\")):document.fonts.load(L(c,'\"'+c.family+'\"'),k).then(function(c){1<=c.length?a():setTimeout(e,25)},b)}e()}),N=new Promise(function(a,c){r=setTimeout(function(){c(Error(\"\"+n+\"ms timeout exceeded\"))},n)});Promise.race([N,M]).then(function(){clearTimeout(r);a(c)},\nb)}else m(function(){function v(){var b;if(b=-1!=f&&-1!=g||-1!=f&&-1!=h||-1!=g&&-1!=h)(b=f!=g&&f!=h&&g!=h)||(null===C&&(b=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent),C=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=C&&(f==w&&g==w&&h==w||f==x&&g==x&&h==x||f==y&&g==y&&h==y)),b=!b;b&&(d.parentNode&&d.parentNode.removeChild(d),clearTimeout(r),a(c))}function I(){if((new Date).getTime()-H>=n)d.parentNode&&d.parentNode.removeChild(d),b(Error(\"\"+\nn+\"ms timeout exceeded\"));else{var a=document.hidden;if(!0===a||void 0===a)f=e.a.offsetWidth,g=p.a.offsetWidth,h=q.a.offsetWidth,v();r=setTimeout(I,50)}}var e=new t(k),p=new t(k),q=new t(k),f=-1,g=-1,h=-1,w=-1,x=-1,y=-1,d=document.createElement(\"div\");d.dir=\"ltr\";u(e,L(c,\"sans-serif\"));u(p,L(c,\"serif\"));u(q,L(c,\"monospace\"));d.appendChild(e.a);d.appendChild(p.a);d.appendChild(q.a);document.body.appendChild(d);w=e.a.offsetWidth;x=p.a.offsetWidth;y=q.a.offsetWidth;I();A(e,function(a){f=a;v()});u(e,\nL(c,'\"'+c.family+'\",sans-serif'));A(p,function(a){g=a;v()});u(p,L(c,'\"'+c.family+'\",serif'));A(q,function(a){h=a;v()});u(q,L(c,'\"'+c.family+'\",monospace'))})})};\"object\"===typeof module?module.exports=B:(window.FontFaceObserver=B,window.FontFaceObserver.prototype.load=B.prototype.load);}());\n","import * as React from \"react\";\nimport styled, { css } from \"../styled-components\";\n\nconst FloatingActionBarRoot = styled<IFloatingActionBarProps, \"div\">(\"div\")`\n    position: absolute;\n    ${props => /^(.*)(top)(.*)$/.test(props.position || \"bottom-right\") ? css`\n        top: 40px;\n    ` : css`\n        bottom: 40px;\n    ` }\n    ${props => /^(.*)(left)(.*)$/.test(props.position || \"bottom-right\") ? css`\n        left: 40px;\n    ` : css`\n        right: 40px;\n    ` }\n    display: flex;\n\n    & > * {\n        margin-left: 16px;\n    }\n\n    & > *:first-child {\n        margin-left: 0;\n    }\n`;\n\nexport interface IFloatingActionBarProps {\n    /**\n     * Position for floating action bar. Default is \"bottom-right\"\n     */\n    position?: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\n}\n\nexport class FloatingActionBar extends React.Component<IFloatingActionBarProps> {\n    render() {\n        return (\n            <FloatingActionBarRoot {...this.props}>{this.props.children}</FloatingActionBarRoot>\n        );\n    }\n}\n","import styled, { css } from \"../styled-components\";\nimport * as React from \"react\";\n\nexport interface ILabelProps {\n    arrow?: boolean;\n    disabled?: boolean;\n    className?: string;\n}\n\nconst $Label: React.StatelessComponent<ILabelProps> = ({ children, className }) => (\n    <div className={className}>{children}</div>\n);\n\nexport const Label = styled($Label)`\n    font-size: 12px;\n    line-height: 12px;\n    height: 12px;\n    text-transform: uppercase;\n    background-color: ${props => (\n        props.arrow ?\n        (\n            props.disabled ?\n            props.theme.colors.arrowLabelBgDisabled :\n            props.theme.colors.arrowLabelBg\n        ) :\n        \"transparent\"\n    )};\n    font-weight: 600;\n    letter-spacing: .5px;\n    padding: 4px 8px;\n    margin-right: ${props => props.arrow ? \"10px\" : \"0\"};\n    color: ${props => (\n        props.arrow ?\n        props.theme.colors.arrowLabel :\n        props.theme.colors.label\n    )};\n\n    /**\n     * When is the first label in a row the width of the container (LayoutRowItemWrapper) is 200px + 2*8px padding,\n     * and the display: flex along with justify-content: flex-end ensures that the label is right aligned.\n     * However, if the label is long enough (bigger than 200px) to wrap, the Label div will occupy all the container\n     * width, and the text will be aligned to right thanks to the rule below.\n     */\n    text-align: right;\n\n    ${props => props.arrow ? css`\n    position: relative;\n    &::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: -10px;\n        border-top: 10px solid transparent;\n        border-bottom: 10px solid transparent;\n        border-left: 10px solid ${props.disabled ?\n            props.theme.colors.arrowLabelBgDisabled :\n            props.theme.colors.arrowLabelBg\n        };\n        transform: scaleX(.8);\n        transform-origin: center left;\n    }\n    ` : \"\"}\n`;\n","import styled, { css } from \"../../../styled-components\";\nimport * as React from \"react\";\n\ninterface ILayoutRowWrapperProps {\n    className?: string;\n    smallScreen?: boolean;\n    centerContent?: boolean;\n    onResize?(width: number): void;\n}\n\nclass $LayoutRowWrapper extends React.Component<ILayoutRowWrapperProps> {\n    private divElement: HTMLDivElement | null;\n    private divWidth = 0;\n    render() {\n        return (\n            <div className={this.props.className} ref={r => { this.divElement = r; }}>\n                {this.props.children}\n            </div>\n        );\n    }\n    onResize = () => {\n        if (this.props.onResize) {\n            this.props.onResize(this.divWidth);\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n        this.handleResize();\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.handleResize);\n    }\n    handleResize = () => {\n        if (this.divElement) {\n            this.divWidth = this.divElement.clientWidth;\n            this.onResize();\n        }\n    }\n}\n\n/** @internal */\nexport const LayoutRowWrapper = styled($LayoutRowWrapper)`\n    display: ${({ smallScreen }) => smallScreen ? \"block\" : \"flex\"};\n    ${({ centerContent }) => centerContent ? css`\n        justify-content: center;\n    ` : \"\"};\n`;\n","import * as React from \"react\";\nimport { ILayoutRowItemProps, LayoutRowItem } from \"./LayoutRowItem\";\nimport { LayoutRowWrapper } from \"./internal/LayoutRowWrapper\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\n\n/**\n * This class is responsible with the layout of the content page\n * Each row of data contains one or more items of information\n * Each box contains a Label and one or more boxes\n */\ninterface ILayoutResponsiveOptions {\n    ignoreFirstLabel?: \"forMobile\" | \"forLowRes\";\n}\n\ninterface ILayoutRowProps {\n    /**\n     * The minimum required width for that row to safely render all items on a single row\n     * TODO: Move minWidth to ILayoutResponsiveOptions\n     */\n    minWidth?: number;\n    responsive?: ILayoutResponsiveOptions;\n}\n\n@observer\nexport class LayoutRow extends React.Component<ILayoutRowProps> {\n    @observable\n    private smallScreen = false;\n\n    @observable\n    private isFirstLabelIgnored = false;\n\n    // validate that c is an instance of LayoutRowItem\n    private isLayoutRowItemInstance(c: React.ReactChild) {\n        let childIsLayoutRowItem = false;\n        try {\n            const childType = (c as React.ReactElement<any>).type;\n            childIsLayoutRowItem = (childType as typeof LayoutRowItem)._brand === \"layoutRowItem\";\n        } catch (e) {\n            // silent fail, assume that c is not a LayoutRowItem instance\n        }\n        return childIsLayoutRowItem;\n    }\n\n    render() {\n        /**\n         * We need to filter out the empty children, but we can't use React.Children.toArray, because it\n         * breaks the keys. We keep a separate index counter and skip through the nulls\n         */\n        let i = 0;\n\n        /**\n         * If it's a small screen render each RowItem as an independent Row\n         */\n        if (this.smallScreen) {\n            return React.Children.map(this.props.children, c => {\n                if (c === null || c === void 0) {\n                    // Just return and don't increment counter\n                    return c;\n                }\n\n                const childIsLayoutRowItem = this.isLayoutRowItemInstance(c);\n                return (\n                    <LayoutRowWrapper\n                        smallScreen={this.smallScreen} onResize={this.onResize} centerContent={this.isFirstLabelIgnored}\n                    >\n                        { childIsLayoutRowItem ? React.cloneElement(\n                            c as React.ReactElement<ILayoutRowItemProps>,\n                            {isBeginningOfRow: true, fullRow: true, ignoreFirstLabel: this.isFirstLabelIgnored}\n                        ) : c }\n                    </LayoutRowWrapper>\n                );\n            });\n        } else {\n            /**\n             * ... otherwise render as normal, one row\n             */\n            return (\n                <LayoutRowWrapper\n                    smallScreen={this.smallScreen} onResize={this.onResize} centerContent={this.isFirstLabelIgnored}\n                >\n                    { React.Children.map(this.props.children, c => {\n                        if (c === null || c === void 0) {\n                            // Just return and don't increment counter\n                            return c;\n                        }\n\n                        const childIsLayoutRowItem = this.isLayoutRowItemInstance(c);\n                        return childIsLayoutRowItem ? React.cloneElement(\n                            c as React.ReactElement<ILayoutRowItemProps>,\n                            {isBeginningOfRow: !i++ || this.smallScreen, ignoreFirstLabel: this.isFirstLabelIgnored}\n                        ) : c;\n                    }) }\n                </LayoutRowWrapper>\n            );\n        }\n    }\n\n    private onResize = (width: number) => {\n        this.smallScreen = this.props.minWidth ?\n            width <= this.props.minWidth :\n            false;\n\n        if (!this.props.responsive || !this.props.responsive.ignoreFirstLabel) {\n            return;\n        }\n        this.isFirstLabelIgnored = (this.props.responsive.ignoreFirstLabel === \"forLowRes\" && width < 540)\n            || (this.props.responsive.ignoreFirstLabel === \"forMobile\" && width < 460);\n    }\n}\n","import * as React from \"react\";\nimport { SvgIcon, ISvgIconProps } from \"../util/react/SvgIcon\";\n\nexport interface IQrCodeIconProps extends ISvgIconProps {\n\n}\n\nexport class QrCodeIcon extends React.Component<IQrCodeIconProps> {\n    render() {\n        return (\n            <SvgIcon {...this.props}>\n                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <polygon points=\"0 0 24 0 24 24 0 24\"></polygon>\n                    <path d={\n                        // tslint:disable-next-line:max-line-length\n                        \"M13,17 L13,13 L17,13 L17,15 L15,15 L15,17 L13,17 Z M17,17 L17,21 L13,21 L13,19 L15,19 L15,17 L17,17 Z M3,11 L3,3 L11,3 L11,11 L3,11 Z M13,11 L13,3 L21,3 L21,11 L13,11 Z M5,9 L9,9 L9,5 L5,5 L5,9 Z M3,21 L3,13 L11,13 L11,21 L3,21 Z M5,19 L9,19 L9,15 L5,15 L5,19 Z M15,9 L19,9 L19,5 L15,5 L15,9 Z M19,15 L19,13 L21,13 L21,15 L19,15 Z M16,8 L16,6 L18,6 L18,8 L16,8 Z M6,8 L6,6 L8,6 L8,8 L6,8 Z M6,18 L6,16 L8,16 L8,18 L6,18 Z M19,21 L19,17 L21,17 L21,21 L19,21 Z M17,17 L17,15 L19,15 L19,17 L17,17 Z\"\n                    } fill=\"currentColor\"></path>\n                </g>\n            </SvgIcon>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { NumberFormatter } from \"../util/internal/locale/NumberFormatter\";\nimport { BigNumber } from \"../util/BigNumber\";\nimport { BigNumberFormatter } from \"../util/internal/locale/BigNumberFormatter\";\n\nexport interface INumberProps {\n    value: number | BigNumber;\n    locale: string;\n}\n\nexport class Number extends React.Component<INumberProps> {\n    render() {\n        let { value, locale } = this.props;\n        return typeof value !== \"number\" ?\n            new BigNumberFormatter().format(value, locale) :\n            new NumberFormatter().format(value, locale);\n    }\n}\n","/** @internal */\nexport class NumberFormatter {\n    format(value: number, locale: string) {\n        return value.toLocaleString(locale);\n    }\n}\n","import * as React from \"react\";\nimport { DomNodeProxy } from \"./DomNodeProxy\";\n\nexport interface IScrollIntoViewProps {\n    children: React.ReactElement<{}> | undefined;\n    /** Delay in seconds */\n    delay?: number;\n}\n\nexport class ScrollIntoView extends React.Component<IScrollIntoViewProps> {\n    private ref: HTMLElement | undefined;\n    private scrollTimeoutId: number | undefined;\n\n    componentDidMount() {\n        this.scrollTimeoutId = setTimeout(() => {\n            this.ref!.scrollIntoView({\n                behavior: \"smooth\"\n            });\n        }, (this.props.delay || 0) * 1000);\n    }\n\n    componentWillUnmount() {\n        if (this.scrollTimeoutId) {\n            clearTimeout(this.scrollTimeoutId);\n            this.scrollTimeoutId = void 0;\n        }\n    }\n\n    render() {\n        return ( this.props.children ?\n            <DomNodeProxy\n                onMount={ref => this.ref = ref}\n                onUnmount={() => this.ref = void 0}\n            >{this.props.children}</DomNodeProxy>\n         : null );\n    }\n}\n","/**\n * Returns the thousands (group) or decimal number separators for the given locale\n *\n * NB: Relies on Intl.NumberFormat and fallsback to simple detection with Number.prototype.toLocaleString()\n *\n * @internal\n */\nexport function getNumberSeparator(locale: string, separatorType: \"decimal\" | \"group\") {\n    let numberFormat: any = Intl.NumberFormat(locale);\n\n    if (numberFormat.formatToParts) {\n        return numberFormat\n            .formatToParts(1000.1)\n            .find((part: any) => part.type === separatorType)\n            .value as string;\n    }\n\n    if (separatorType === \"group\") {\n        return (1000).toLocaleString().replace(/[0-9]/g, \"\");\n    } else {\n        return 1.1.toLocaleString().replace(/[0-9]/g, \"\");\n    }\n}\n","import { BigNumber, Format } from \"../../BigNumber\";\nimport { getNumberSeparator } from \"./numberFormat\";\n\ninterface IFormatterOptions {\n    minimumFractionDigits?: number;\n    maximumFractionDigits?: number;\n}\n\n/**\n * Outputs a formatted, localized string representation of a BigNumber,\n * in the same fashion as Number.prototype.toLocaleString\n *\n * @internal\n */\nexport class BigNumberFormatter {\n    // HACK: We keep a static property of BigNumber Format objects and do lazy locale detection\n    // to avoid having to pass this class with DI through the entire app.\n    private static formats = new Map<string, Format>();\n\n    private static getBnFormat(locale: string) {\n        let fmt = this.formats.get(locale);\n        if (!fmt) {\n            fmt = {\n                decimalSeparator: getNumberSeparator(locale, \"decimal\"),\n                groupSeparator: getNumberSeparator(locale, \"group\"),\n                groupSize: 3\n            };\n            this.formats.set(locale, fmt);\n        }\n        return fmt;\n    }\n\n    format(num: BigNumber, locale: string, options: IFormatterOptions = {}) {\n        let fmt = BigNumberFormatter.getBnFormat(locale);\n        num = num.decimalPlaces(options.maximumFractionDigits !== void 0 ? options.maximumFractionDigits : 3);\n\n        if (options.minimumFractionDigits !== void 0) {\n            let fractionDigits = num.decimalPlaces();\n            if (fractionDigits < options.minimumFractionDigits) {\n                return num.toFormat(options.minimumFractionDigits, fmt);\n            }\n        }\n        return num.toFormat(fmt);\n    }\n}\n","import { observable, action } from \"mobx\";\nimport { IAccordionItemConfig } from \"./IAccordionItemConfig\";\nimport { AccordionItemContentStatus } from \"./AccordionItemContentStatus\";\n\nexport class AccordionItemState<TConfig extends IAccordionItemConfig> {\n    public index: number;\n    public config: TConfig;\n    public onClick: () => void;\n    @observable.ref\n    private _content: React.ReactElement<{}> | undefined;\n    @observable\n    private _contentStatus = AccordionItemContentStatus.NotLoaded;\n\n    @action\n    updateContent(content: this[\"content\"], contentStatus: this[\"contentStatus\"]) {\n        this._content = content;\n        this._contentStatus = contentStatus;\n    }\n\n    @action\n    resetContent() {\n        this._content = void 0;\n        this._contentStatus = AccordionItemContentStatus.NotLoaded;\n    }\n\n    get content() {\n        return this._content;\n    }\n\n    get contentStatus() {\n        return this._contentStatus;\n    }\n}\n","import { observable, action } from \"mobx\";\nimport { IAccordionItemConfig } from \"../IAccordionItemConfig\";\nimport { AccordionItemState } from \"../AccordionItemState\";\nimport { AccordionItemContentStatus } from \"../AccordionItemContentStatus\";\n\n/** @internal */\nexport class AccordionState<TItemConfig extends IAccordionItemConfig> {\n    @observable.shallow\n    private items: AccordionItemState<TItemConfig>[];\n    @observable.ref\n    private activeItem: AccordionItemState<TItemConfig> | undefined;\n\n    constructor(private onError: (e: any, item: AccordionItemState<TItemConfig>) => void) {\n\n    }\n\n    getItems() {\n        return this.items;\n    }\n\n    getActiveItem() {\n        return this.activeItem;\n    }\n\n    @action\n    buildItems(itemConfigs: TItemConfig[]) {\n        this.items = itemConfigs.map((c, idx) => {\n            let item = new AccordionItemState<TItemConfig>();\n            item.index = idx;\n            item.config = c;\n            item.onClick = () => this.handleItemClick(item);\n            return item;\n        });\n        this.activeItem = void 0;\n    }\n\n    private handleItemClick = async (item: AccordionItemState<TItemConfig>) => {\n        // Only one item active at a time, but we can also toggle it off\n        this.activeItem = item === this.activeItem ? void 0 : item;\n\n        if (this.activeItem !== void 0) {\n            await this.onItemExpanded(item);\n        }\n    }\n\n    private async onItemExpanded(item: AccordionItemState<TItemConfig>) {\n        try {\n            item.resetContent();\n            item.updateContent(await item.config.content(), AccordionItemContentStatus.Loaded);\n        } catch (e) {\n            this.onError(e, item);\n            item.updateContent(void 0, AccordionItemContentStatus.Error);\n        }\n    }\n}\n","import * as React from \"react\";\nimport { AccordionItemContentStatus } from \"../AccordionItemContentStatus\";\nimport { AccordionContentFrame } from \"../AccordionContentFrame\";\nimport { Fade } from \"../../../fx/Fade\";\nimport { SpinnerRegular } from \"../../../fx/SpinnerRegular\";\nimport { ValueBox } from \"../../../layout/content/box/ValueBox\";\nimport { ErrorIcon } from \"../../../icon/ErrorIcon\";\nimport { IAccordionItemConfig } from \"../IAccordionItemConfig\";\n\n/** @internal */\nexport interface IAccordionContentWrapperProps<TItemConfig extends IAccordionItemConfig> {\n    status: AccordionItemContentStatus;\n    content: React.ReactElement<{}> | undefined;\n    config: TItemConfig;\n    /**\n     * Delay showing the spinner until the content animation is done\n     * This prevents flickering/clipping the spinner\n     */\n    loadingDelay: number | undefined;\n    loadingText: string;\n    errorText: string;\n    arrowPosition: number | undefined;\n    renderContent?(args: {\n        content?: React.ReactElement<{}>;\n        status: AccordionItemContentStatus;\n        arrowPosition?: number;\n        config: TItemConfig;\n    }): React.ReactElement<{}>;\n}\n\n/** @internal */\nexport class AccordionContentWrapper<TItemConfig extends IAccordionItemConfig>\nextends React.Component<IAccordionContentWrapperProps<TItemConfig>> {\n    render() {\n        let { status, content, config, arrowPosition, loadingDelay, loadingText, errorText } = this.props;\n\n        let contentEl: React.ReactElement<{}> | undefined;\n        if (status === AccordionItemContentStatus.Loaded) {\n            if (!this.props.renderContent) {\n                contentEl = <AccordionContentFrame arrowPosition={arrowPosition}>\n                    {content}\n                </AccordionContentFrame>;\n            } else {\n                contentEl = content;\n            }\n        } else if (status === AccordionItemContentStatus.NotLoaded) {\n            contentEl = <Fade duration={.2} delay={loadingDelay}>\n                <div style={{ display: \"flex\" }}>\n                    <SpinnerRegular />\n                    <ValueBox>{loadingText}</ValueBox>\n                </div>\n            </Fade>;\n        } else {\n            contentEl = <>\n                <div style={{ display: \"flex\" }}>\n                    <ErrorIcon />\n                    <ValueBox colors=\"error\">{errorText}</ValueBox>\n                </div>\n            </>;\n        }\n\n        return this.props.renderContent ?\n            this.props.renderContent({content: contentEl, status, arrowPosition, config}) :\n            contentEl;\n    }\n}\n","import * as React from \"react\";\nimport styled from \"../styled-components\";\nimport { observer } from \"mobx-react\";\nimport { observable } from \"mobx\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst CLASS_NAME = \"height-transition\";\n\ninterface IHeightRootProps {\n    computedHeight: number | undefined;\n    duration: number;\n}\n\nconst HeightRoot = styled<IHeightRootProps, \"div\">(\"div\")`\n    & .${CLASS_NAME}-enter,\n    & .${CLASS_NAME}-exit {\n        transition: height ${props => props.duration}s ease-in-out;\n        overflow: hidden;\n    }\n\n    & .${CLASS_NAME}-enter {\n        height: 0;\n    }\n\n    & .${CLASS_NAME}-enter-active {\n        height: ${props => props.computedHeight ? props.computedHeight + \"px\" : \"auto\"};\n    }\n\n    & .${CLASS_NAME}-enter-done {\n    }\n\n    & .${CLASS_NAME}-exit {\n        height: ${props => props.computedHeight ? props.computedHeight + \"px\" : \"auto\"};\n    }\n\n    & .${CLASS_NAME}-exit-active {\n        height: 0;\n    }\n`;\n\nexport interface IHeightProps {\n    /** Duration in seconds */\n    duration: number;\n    children: React.ReactNode;\n}\n\n@observer\nexport class Height extends React.Component<IHeightProps> {\n    private contentRef: HTMLDivElement;\n    @observable\n    private contentHeight: number | undefined;\n\n    render() {\n        return (\n            <HeightRoot computedHeight={this.contentHeight} duration={this.props.duration}>\n                <TransitionGroup>\n                    {this.props.children && <CSSTransition\n                        key={status}\n                        timeout={this.props.duration * 1000}\n                        classNames={CLASS_NAME}\n                        unmountOnExit\n                    >\n                    {/* CSSTransition applies className on the inner div, so we add another extra layer */}\n                        <div>\n                            <div ref={this.handleRef} style={{overflowY: \"visible\", height: \"auto\"}}>\n                                {this.props.children}\n                            </div>\n                        </div>\n                    </CSSTransition>\n                    }\n                </TransitionGroup>\n            </HeightRoot>\n        );\n    }\n\n    componentDidUpdate(prevProps: IHeightProps) {\n        if (this.props.children !== prevProps.children) {\n            this.updateHeight();\n        }\n    }\n\n    private updateHeight() {\n        this.contentHeight = this.contentRef.offsetHeight;\n    }\n\n    private handleRef = (ref: HTMLDivElement | null) => {\n        if (ref) {\n            this.contentRef = ref;\n            this.updateHeight();\n        }\n    }\n}\n","import * as React from \"react\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { IAccordionItemConfig } from \"./IAccordionItemConfig\";\nimport { LayoutRow } from \"../../layout/content/LayoutRow\";\nimport { LayoutRowItem } from \"../../layout/content/LayoutRowItem\";\nimport { Label } from \"../../data/Label\";\nimport { DomNodeProxy } from \"../../util/react/DomNodeProxy\";\nimport { AccordionState } from \"./internal/AccordionState\";\nimport { AccordionContentWrapper } from \"./internal/AccordionContentWrapper\";\nimport { Height } from \"../../fx/Height\";\nimport { AccordionItemState } from \"./AccordionItemState\";\nimport { AccordionItemContentStatus } from \"./AccordionItemContentStatus\";\nimport { IAccordionVerticalProps } from \"./AccordionVertical\";\n\nexport interface IAccordionHorizontalProps<TItemConfig extends IAccordionItemConfig> {\n    label: string;\n    noDataContent: React.ReactElement<{}>;\n    items: TItemConfig[] | undefined;\n    loadingText: string;\n    errorText: string;\n    contentAnimSeconds?: number;\n    onContentError(e: any, item: AccordionItemState<TItemConfig>): void;\n    renderExpander(args: {\n        config: TItemConfig;\n        isOpen: boolean;\n        onClick(): void;\n    }): React.ReactElement<{}>;\n    renderContent?(args: {\n        content?: React.ReactElement<{}>;\n        status: AccordionItemContentStatus;\n        arrowPosition?: number;\n        config: TItemConfig;\n    }): React.ReactElement<{}>;\n}\n\n/**\n * Accordion with async loading that uses the standard layout row/item components to display its data\n * Uses a horizontal layout, with expanders on the same row\n *\n * Shows loading/error/no data states\n */\n@observer\nexport class AccordionHorizontal<TItemConfig extends IAccordionItemConfig>\nextends React.Component<IAccordionHorizontalProps<TItemConfig>> {\n    static defaultProps: Partial<IAccordionVerticalProps<any>> = {\n        contentAnimSeconds: .2\n    };\n\n    private accordionState: AccordionState<TItemConfig>;\n    @observable\n    private expanderEls = new Map<number, HTMLElement>();\n    private containerOffsetLeft: number | undefined;\n\n    constructor(props: IAccordionHorizontalProps<TItemConfig>) {\n        super(props);\n\n        this.accordionState = new AccordionState<TItemConfig>(this.props.onContentError);\n        this.accordionState.buildItems(this.props.items || []);\n    }\n\n    componentDidUpdate(prevProps: IAccordionHorizontalProps<TItemConfig>) {\n        if (this.props.items !== prevProps.items) {\n            this.accordionState.buildItems(this.props.items || []);\n        }\n    }\n\n    render() {\n        if (!this.props.items) {\n            return <LayoutRow>\n                <LayoutRowItem>\n                    <Label>{this.props.label}</Label>\n                    {this.props.noDataContent}\n                </LayoutRowItem>\n            </LayoutRow>;\n        }\n\n        let items = this.accordionState.getItems();\n        let activeItem = this.accordionState.getActiveItem();\n\n        return <div ref={this.handleContainerRef}>\n            <LayoutRow>\n                <LayoutRowItem>\n                    <Label>{this.props.label}</Label>\n                    <div style={{ display: \"flex\" }}>\n                        { items.map((item, idx) => <React.Fragment key={idx}>\n                            { this.renderExpander({\n                                config: item.config,\n                                idx,\n                                isOpen: item === activeItem,\n                                onClick: item.onClick\n                            }) }\n                        </React.Fragment>) }\n                    </div>\n                </LayoutRowItem>\n            </LayoutRow>\n            <Height duration={this.props.contentAnimSeconds!}>\n                { activeItem && <AccordionContentWrapper<TItemConfig>\n                    content={activeItem.content}\n                    config={activeItem.config}\n                    status={activeItem.contentStatus}\n                    arrowPosition={this.getContentArrowPosition(activeItem.index)}\n                    loadingDelay={this.props.contentAnimSeconds!}\n                    loadingText={this.props.loadingText}\n                    errorText={this.props.errorText}\n                    renderContent={this.props.renderContent}\n                />}\n            </Height>\n        </div>;\n    }\n\n    private renderExpander({config, idx, isOpen, onClick}: {\n        config: TItemConfig;\n        idx: number;\n        isOpen: boolean;\n        onClick(): void;\n    }) {\n        return <DomNodeProxy\n            onMount={ref => this.expanderEls.set(idx, ref)}\n            onUnmount={ref => this.expanderEls.delete(idx)}\n        >\n            { this.props.renderExpander({\n                config,\n                isOpen,\n                onClick\n            }) }\n        </DomNodeProxy>;\n    }\n\n    private handleContainerRef = (ref: HTMLElement | null) => { if (ref) {\n        this.containerOffsetLeft = ref.offsetLeft;\n    }}\n\n    private getContentArrowPosition(idx: number) {\n        if (this.expanderEls.size && this.containerOffsetLeft) {\n            if (!this.expanderEls.has(idx)) {\n                throw new RangeError(`Index \"${idx}\" out of range`);\n            }\n            let expanderEl = this.expanderEls.get(idx)!;\n            let expanderWidth = expanderEl.offsetWidth;\n            return expanderEl.offsetLeft - this.containerOffsetLeft + expanderWidth / 2;\n        }\n\n        return void 0;\n    }\n}\n","import * as React from \"react\";\nimport { ISvgIconProps, SvgIcon } from \"../util/react/SvgIcon\";\n\nexport interface ISwitchIconProps extends ISvgIconProps {\n\n}\n\nexport class SwitchIcon extends React.Component<ISwitchIconProps> {\n    render() {\n        return (\n            <SvgIcon {...this.props}>\n                <path\n                    /* tslint:disable-next-line:max-line-length */\n                    d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"\n                    fill=\"currentColor\"\n                />\n            </SvgIcon>\n        );\n    }\n}\n","export enum AccordionItemContentStatus {\n    NotLoaded,\n    Loaded,\n    Error\n}\n","import * as React from \"react\";\nimport styled, { css, withTheme } from \"../../styled-components\";\nimport { ITheme } from \"../../theme/ITheme\";\n\nconst ARROW_OFFSET_TOP = 7;\n\nconst AccordionContentFrameRoot = styled<IAccordionContentFrameProps, \"div\">(\"div\")`\n    ${ props => !props.noBorder ? css`\n    border-top: ${props.borderColor} 1px solid;\n    ` : `` }\n    background: ${props => props.backgroundColor};\n    ${props => props.arrowPosition !== void 0 ? css`\n    position: relative;\n    margin-top: ${(ARROW_OFFSET_TOP + (props.noBorder ? 0 : 1))}px;\n    &:before, &:after {\n        content: \"\";\n        position: absolute;\n        width: 0;\n        height: 0;\n        border-style: solid;\n        transform: translateX(-50%);\n    }\n    &:before {\n        top: -${(ARROW_OFFSET_TOP + (props.noBorder ? 0 : 1))}px;\n        left: ${props.arrowPosition}px;\n        border-color: transparent transparent ${props.borderColor} transparent;\n        border-width: 8px;\n        border-top-width: 0;\n    }\n    &:after {\n        top: -${(ARROW_OFFSET_TOP - (props.noBorder ? 1 : 0))}px;\n        left: ${props.arrowPosition}px;\n        border-color: transparent transparent ${props.backgroundColor} transparent;\n        border-width: 7px;\n        border-top-width: 0;\n    }\n    ` : ``}\n`;\n\ninterface IAccordionContentFrameProps {\n    arrowPosition: number | undefined;\n    backgroundColor?: string;\n    borderColor?: string;\n    /** Doesn't affect the arrow border. Set borderColor to transparent to disable the arrow border */\n    noBorder?: boolean;\n    theme?: ITheme;\n}\n\nclass $AccordionContentFrame extends React.PureComponent<IAccordionContentFrameProps> {\n    render() {\n        let { arrowPosition, backgroundColor, borderColor, theme, noBorder } = this.props;\n\n        return (\n            <AccordionContentFrameRoot\n                arrowPosition={arrowPosition}\n                backgroundColor={backgroundColor || theme!.colors.accordionBg}\n                borderColor={borderColor || theme!.colors.accordionBorder}\n                noBorder={noBorder}\n            >{this.props.children}</AccordionContentFrameRoot>\n        );\n    }\n}\n\nexport const AccordionContentFrame = withTheme($AccordionContentFrame);\n","import * as React from \"react\";\nimport { SvgIcon, ISvgIconProps } from \"../util/react/SvgIcon\";\n\nexport interface IArrowDownIconProps extends ISvgIconProps {\n\n}\n\nexport class ArrowDownIcon extends React.Component<IArrowDownIconProps> {\n    render() {\n        return (\n            <SvgIcon {...this.props}>\n                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <polygon points=\"0 0 24 0 24 24 0 24\"></polygon>\n                    <polygon fill=\"currentColor\" fillRule=\"nonzero\" points={\n                        \"16.59 8.59 12 13.17 7.41 8.59 6 10 12 16 18 10\"\n                    }></polygon>\n                </g>\n            </SvgIcon>\n        );\n    }\n}\n","import * as React from \"react\";\nimport styled, { css } from \"../../styled-components\";\nimport { ArrowDownIcon } from \"../../icon/ArrowDownIcon\";\n\nconst ExpanderIconRoot = styled<IExpanderIconProps, \"span\">(\"span\")`\n    color: ${props => props.expanded ? props.theme.colors.expanderOpenIcon : props.theme.colors.expanderIcon};\n    padding-top: 1px;\n`;\n\nconst Icon = styled<IExpanderIconProps, \"div\">(\"div\")`\n    transition: transform .2s ease-in-out;\n    ${props => props.expanded ? css`\n    transform: rotate(-180deg);\n    ` : ``}\n`;\n\ninterface IExpanderIconProps {\n    expanded: boolean;\n}\n\nexport class ExpanderIcon extends React.PureComponent<IExpanderIconProps> {\n    render() {\n        return (\n            <ExpanderIconRoot {...this.props}>\n                <Icon {...this.props}>\n                    <ArrowDownIcon />\n                </Icon>\n            </ExpanderIconRoot>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { ValueBox } from \"../../layout/content/box/ValueBox\";\nimport styled, { css } from \"../../styled-components\";\nimport { ExpanderIcon } from \"./ExpanderIcon\";\nimport { Number } from \"../../data/Number\";\n\ninterface IExpanderRootProps {\n    disabled?: boolean;\n    onClick(): void;\n}\n\nconst ExpanderRoot = styled<IExpanderRootProps, \"div\">(\"div\")`\n    cursor: ${props => props.disabled ? \"default\" : \"pointer\"};\n    user-select: none;\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.04);\n`;\n\nconst ExpanderLabel = styled.div`\n    margin-right: 8px;\n`;\n\ninterface IOpenProps {\n    open: boolean;\n    disabled?: boolean;\n}\n\nconst ExpanderValue = styled<IOpenProps, \"span\">(\"span\")`\n    color: ${props => props.disabled ?\n        props.theme.colors.expanderDisabled :\n        props.open ? props.theme.colors.expanderOpenValue : props.theme.colors.expanderValue};\n    margin-left: 8px;\n    margin-right: 8px;\n`;\n\nconst StyledValueBox = styled(ValueBox)`\n    transition: background-color .2s ease-in-out, border-color .2s ease-in-out;\n    border-radius: 4px;\n`;\n\ninterface IExpanderContentProps {\n    fullWidth?: boolean;\n}\n\nconst ExpanderContent = styled<IExpanderContentProps, \"div\">(\"div\")`\n    display: flex;\n    ${props => props.fullWidth ? css`\n    width: 100%;\n\n    & ${ExpanderValue} {\n        flex-grow: 1;\n        text-align: right;\n    }\n    ` : ``}\n`;\n\nexport interface IExpanderProps {\n    label: string;\n    value?: number;\n    open: boolean;\n    locale: string;\n    /** Full width mode (expand to 100% of container) */\n    fullWidth?: boolean;\n    disabled?: boolean;\n    onClick?(): void;\n    onResize?(): void;\n}\n\nexport class Expander extends React.Component<IExpanderProps> {\n    render() {\n        let { label, value, open, disabled, locale } = this.props;\n        return (\n            <ExpanderRoot onClick={this.handleClick} disabled={disabled}>\n                <StyledValueBox\n                    colors={(theme) => ({\n                        background: open ? theme.colors.expanderOpenBg : theme.colors.expanderBg,\n                        text:  disabled ?\n                            theme.colors.expanderDisabled :\n                            open ? theme.colors.expanderOpenLabel : theme.colors.expanderLabel\n                    })}\n                    variant=\"big\"\n                    fullWidth={this.props.fullWidth}\n                >\n                    <ExpanderContent fullWidth={this.props.fullWidth}>\n                        <ExpanderLabel>{label}</ExpanderLabel>\n                        { value !== void 0 ?\n                        <ExpanderValue open={open} disabled={disabled}>\n                            <Number locale={locale} value={value} />\n                        </ExpanderValue>\n                        : null }\n                        <ExpanderIcon expanded={open} />\n                    </ExpanderContent>\n                </StyledValueBox>\n            </ExpanderRoot>\n        );\n    }\n\n    private handleClick = () => {\n        if (this.props.onClick && !this.props.disabled) {\n            this.props.onClick();\n        }\n    }\n\n    componentDidUpdate(prevProps: IExpanderProps) {\n        if (prevProps.label !== this.props.label || prevProps.value !== this.props.value) {\n            const onResize = this.props.onResize;\n            if (onResize) {\n                // setTimeout because of async rendering\n                setTimeout(onResize);\n            }\n        }\n    }\n}\n","import * as React from \"react\";\nimport styled from \"../../styled-components\";\nimport { ILayoutRowItemProps } from \"./LayoutRowItem\";\n\ninterface ILayoutBoxItemProps extends ILayoutRowItemProps {\n    className?: string;\n}\n\nconst $LayoutBoxItem: React.StatelessComponent<ILayoutBoxItemProps> = ({ children, className }) => (\n    <div className={className}>{children}</div>\n);\nexport const LayoutBoxItem = styled($LayoutBoxItem)`\n    display: flex;\n    align-items: center;\n    /* put this to auto for tx alignment */\n    height: ${({autoHeight, baseHeight}) => autoHeight ? \"auto\" : (baseHeight ? baseHeight + \"px\" : \"48px\")};\n    padding: 0 8px;\n    /* flex: 0 0 auto; put this to 1 1 for tx wrapping */\n    flex: ${({autoHeight}) => autoHeight ? \"1 1\" : \"0 0\"} auto;\n    width: ${props => (props.isBeginningOfRow && !props.autoWidth ? \"200px\" : \"auto\")};\n    justify-content: ${props => (\n        props.justifyContent ? props.justifyContent : (props.isBeginningOfRow ? \"flex-end\" : \"inherit\")\n    )};\n\n    @media ${props => props.theme.mediaQueries.breakPoints.smallerThanFullView} {\n        width: auto;\n        min-width: ${props => (props.isBeginningOfRow && !props.autoWidth ? \"125px\" : \"auto\")};\n    }\n\n    @media ${props => props.theme.mediaQueries.breakPoints.lessThan620px} {\n        width: auto;\n        min-width: ${props => (props.isBeginningOfRow && !props.autoWidth ? \"95px\" : \"auto\")};\n    }\n`;\n","import * as React from \"react\";\nimport styled from \"../../styled-components\";\nimport { LayoutBoxItem } from \"./LayoutBoxItem\";\nimport * as ReactIs from \"react-is\";\n\ninterface ILayoutRowItemWrapperProps {\n    fullRow?: boolean;\n    className?: string;\n}\n\nconst $LayoutRowItemWrapper: React.StatelessComponent<ILayoutRowItemWrapperProps> = ({\n    children,\n    className\n}) => (\n    <div className={className}>{children}</div>\n);\n\nconst LayoutRowItemWrapper = styled($LayoutRowItemWrapper)`\n    display: flex;\n    flex: ${props => props.fullRow ? \"1 1\" : \"0 0\"} auto;\n`;\n\ninterface ILayoutInfoBoxItemProps {\n    fullRow?: boolean;\n    className?: string;\n}\nconst $LayoutInfoBoxItem: React.StatelessComponent<ILayoutInfoBoxItemProps> = ({\n    children,\n    className\n}) => (\n    <div className={className}>{children}</div>\n);\nconst LayoutInfoBoxItem = styled($LayoutInfoBoxItem)`\n    display: flex;\n    flex: ${({fullRow}) => fullRow ? \"1 1\" : \"0 1\"} auto;\n    flex-wrap: wrap;\n`;\n\nexport interface ILayoutRowItemProps {\n    isBeginningOfRow?: boolean;\n    ignoreFirstLabel?: boolean;\n    fullRow?: boolean;\n    baseHeight?: number;\n    autoHeight?: boolean;\n    autoWidth?: boolean;\n    justifyContent?: string;\n}\n\nexport class LayoutRowItem extends React.PureComponent<ILayoutRowItemProps> {\n    static _brand = \"layoutRowItem\";\n    render() {\n        const childrenArray = React.Children.toArray(this.props.children)\n            .reduce((outArr, child) => {\n                if (ReactIs.isFragment(child)) {\n                    outArr.push(...React.Children.map((child.props as React.Props<{}>).children, c => {\n                        if (!ReactIs.isElement(c)) {\n                            // tslint:disable-next-line:no-console\n                            console.error(\n                                `Fragment passed to LayoutRowItem contains a child that is not a React.Element.`, c);\n                            return c;\n                        }\n                        return React.cloneElement(c, {});\n                    }));\n                } else {\n                    outArr.push(child);\n                }\n                return outArr;\n            }, [] as React.ReactChild[]);\n\n        const labelElement = childrenArray.shift();\n        return (\n            <LayoutRowItemWrapper fullRow={this.props.fullRow}>\n                { this.props.ignoreFirstLabel ? null :\n                    <LayoutBoxItem isBeginningOfRow={this.props.isBeginningOfRow} baseHeight={this.props.baseHeight}\n                        autoWidth={this.props.autoWidth}>\n                        { labelElement }\n                    </LayoutBoxItem>\n                }\n                { childrenArray.length === 1 ?\n                    this.childrenArrayRender(childrenArray) :\n                    <LayoutInfoBoxItem fullRow={this.props.fullRow}>\n                        { this.childrenArrayRender(childrenArray) }\n                    </LayoutInfoBoxItem>\n                }\n            </LayoutRowItemWrapper>\n        );\n    }\n\n    private childrenArrayRender(children: React.ReactChild[]) {\n        return children.map((c, idx) => {\n            return (\n                <LayoutBoxItem baseHeight={this.props.baseHeight} autoHeight={this.props.autoHeight}\n                    autoWidth={this.props.autoWidth} key={idx}\n                >\n                    { c }\n                </LayoutBoxItem>\n            );\n        });\n    }\n}\n"],"sourceRoot":""}