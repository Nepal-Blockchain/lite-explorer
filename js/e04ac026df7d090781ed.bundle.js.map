{"version":3,"sources":["webpack:///./page/account/qrCode/QrCode.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","QrCode","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","qrcode__WEBPACK_IMPORTED_MODULE_1__","qrcode__WEBPACK_IMPORTED_MODULE_1___default","[object Object]","this","renderToCanvasDeferred","prevProps","value","props","cancelDeferredRender","timeoutId","setTimeout","canvasEl","catch","e","logger","error","clearTimeout","ref"],"mappings":"wGAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,2BAAAE,IAAA,IAAAC,EAAAL,EAAA,YAAAM,EAAAN,EAAAO,EAAAF,GAAA,IAAAG,EAAAR,EAAA,YAAAS,EAAAT,EAAAO,EAAAC,SASaJ,UAAeC,EAAA,iBAIxBK,oBACIC,KAAKC,yBAGTF,mBAAmBG,GACXA,EAAUC,QAAUH,KAAKI,MAAMD,OAC/BH,KAAKC,yBAIbF,uBACIC,KAAKK,uBAGDN,yBACJC,KAAKK,uBACLL,KAAKM,UAAYC,WAAW,KACxBV,EAAA,YAAgBG,KAAKQ,SAAUR,KAAKI,MAAMD,OAAOM,MAAMC,IACnDV,KAAKI,MAAMO,OAAOC,MAAM,yBAA0BF,GAAKP,MAAOH,KAAKI,MAAMD,YAK7EJ,uBACJ,GAAIC,KAAKM,UAAW,CAChBO,aAAab,KAAKM,WAClBN,KAAKM,eAAY,GAIzBP,SACI,OACIL,EAAA,2BAAQoB,IAAKA,GAAOd,KAAKQ,SAAWM","file":"js/e04ac026df7d090781ed.bundle.js","sourcesContent":["import * as React from \"react\";\nimport * as QRCode from \"qrcode\";\nimport { ILogger } from \"app/util/log/ILogger\";\n\nexport interface IQrCodeProps {\n    value: string;\n    logger: ILogger;\n}\n\nexport class QrCode extends React.PureComponent<IQrCodeProps> {\n    private canvasEl: HTMLCanvasElement;\n    private timeoutId: number | undefined;\n\n    componentDidMount() {\n        this.renderToCanvasDeferred();\n    }\n\n    componentDidUpdate(prevProps: IQrCodeProps) {\n        if (prevProps.value !== this.props.value) {\n            this.renderToCanvasDeferred();\n        }\n    }\n\n    componentWillUnmount() {\n        this.cancelDeferredRender();\n    }\n\n    private renderToCanvasDeferred() {\n        this.cancelDeferredRender();\n        this.timeoutId = setTimeout(() => {\n            QRCode.toCanvas(this.canvasEl, this.props.value).catch(e => {\n                this.props.logger.error(\"Couldn't render QRCode\", e, { value: this.props.value });\n            });\n        });\n    }\n\n    private cancelDeferredRender() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = void 0;\n        }\n    }\n\n    render() {\n        return (\n            <canvas ref={ref => this.canvasEl = ref!}>\n            </canvas>\n        );\n    }\n}\n"],"sourceRoot":""}