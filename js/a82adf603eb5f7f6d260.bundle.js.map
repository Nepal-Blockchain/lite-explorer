{"version":3,"sources":["webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/Label.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/internal/LayoutRowWrapper.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/LayoutRow.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/LayoutSection.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/Number.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/internal/locale/NumberFormatter.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/time/RelativeTimeFormatter.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/react/ClickThreshold.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/box/TimeElapsedBox.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/datetime-difference/index.js","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/internal/wei.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/internal/locale/numberFormat.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/util/internal/locale/BigNumberFormatter.ts","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/EthValue.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/box/EthValueBox.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/hex/internal/HexDataItem.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/hex/internal/HexDataContent.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/hex/HexData.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/box/NumberBox.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/icon/StatusSomeConfirmedIcon.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/vis/Gauge.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/box/GasPercentageBox.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/data/box/GasUsedValueBox.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/icon/StatusNotConfirmedIcon.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/LayoutBoxItem.tsx","webpack:////home/cnmun/ETH/ethereum-lite-explorer/node_modules/ethstats-ui/src/layout/content/LayoutRowItem.tsx"],"names":["__webpack_require__","d","__webpack_exports__","Label","_styled_components__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","$Label","children","className","Object","props","arrow","disabled","theme","colors","arrowLabelBgDisabled","arrowLabelBg","arrowLabel","label","LayoutRowWrapper_$LayoutRowWrapper","react","[object Object]","this","divWidth","onResize","handleResize","divElement","clientWidth","ref","r","window","addEventListener","removeEventListener","LayoutRowWrapper","styled_components","smallScreen","centerContent","LayoutRow_LayoutRow","LayoutRow","isFirstLabelIgnored","width","minWidth","responsive","ignoreFirstLabel","c","childIsLayoutRowItem","childType","type","_brand","e","i","map","isLayoutRowItemInstance","isBeginningOfRow","fullRow","tslib_es6","mobx_module","index_module","LayoutSection","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_styled_components__WEBPACK_IMPORTED_MODULE_1__","_Spacer__WEBPACK_IMPORTED_MODULE_2__","LayoutSectionWrapper","div","toArray","length","useWrapper","height","Number","_util_internal_locale_NumberFormatter__WEBPACK_IMPORTED_MODULE_1__","_util_internal_locale_BigNumberFormatter__WEBPACK_IMPORTED_MODULE_2__","value","locale","format","NumberFormatter","toLocaleString","defaultTranslations","future","past","s","ss","m","mm","h","hh","dd","M","MM","y","yy","unitCodes","years","months","days","hours","minutes","seconds","RelativeTimeFormatter_RelativeTimeFormatter","translations","d1","d2","formatted","formatRelativeTime","intv","present","Date","getTime","before","diff","datetime_difference","units","firstSignificantIdx","findIndex","unit","humanizeDiffUnit","firstUnit","secondUnit","unitCode","replace","DEFAULT_THRESHOLD","ClickThreshold_ClickThreshold","onMouseDown","mouseDownCoords","x","clientX","clientY","onMouseUp","Math","abs","threshold","onClick","defaultProps","TimeElapsedContentRoot","CopyValueButtonWrapper","DisplayMode","TimeElapsedBox_TimeElapsedBox","TimeElapsedBox","displayMode","RelativeTime","cycleDisplayMode","AbsoluteTime","Error","updateCurrentTime","currentTime","floor","now","timeoutId","setTimeout","computeRefreshInterval","prevProps","timestamp","clearTimeout","formatDiff","toLocaleDateString","timeZone","timeZoneName","year","month","day","hour","minute","second","box","ValueBox","variant","TooltipRegular","content","style","display","alignItems","CopyValueButton","clipboard","nonclickable","module","exports","datetimeDiff","from","to","min","Infinity","max","temp","start","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","end","dec","UTC","milliseconds","weiToEth","weiToGwei","wei","shiftedBy","ethToWei","eth","getNumberSeparator","separatorType","numberFormat","Intl","NumberFormat","formatToParts","find","part","BigNumberFormatter_BigNumberFormatter","fmt","formats","get","decimalSeparator","groupSeparator","groupSize","set","num","options","getBnFormat","decimalPlaces","maximumFractionDigits","minimumFractionDigits","fractionDigits","toFormat","Map","EthValue","_util_internal_wei__WEBPACK_IMPORTED_MODULE_1__","decimals","showSymbol","EthValueBox","_layout_content_box_ValueBox__WEBPACK_IMPORTED_MODULE_1__","_EthValue__WEBPACK_IMPORTED_MODULE_2__","isGreaterThan","HexDataItemRoot","hexDataItem","undefined","HexDataItem_HexDataItem","HexDataContentRoot","HexDataContent_HexDataContent","data","match","v","idx","key","CopyButtonWrapper","HexDataRoot","HexTextArea","textarea","HexData_HexData","HexData","hovered","copyContent","copy","mouseEnterHandler","mouseLeaveHandler","dataLimit","onMouseEnter","onMouseLeave","readOnly","IconButton","Icon","CopyIcon","color","copyIcon","NumberBox","_Number__WEBPACK_IMPORTED_MODULE_2__","StatusSomeConfirmedIcon","_util_react_SvgIcon__WEBPACK_IMPORTED_MODULE_1__","uniqueId","assign","stroke","strokeWidth","fill","fillRule","id","points","opacity","mask","Gauge_Gauge","dx","dy","alpha","PI","Ro","Ri","Cx","Cy","Xo","Yo","Xi","Yi","cos","sin","getPathValues","path","uniqueFilterId","version","xmlns","backgroundColor","getPath","lineColor","getLinePath","GasPercentageBox","text","gasPercentageBoxText","background","valueBox","primary","GasUsedValueBox_GasUsedValueBox","limit","percentFraction","dividedBy","toNumber","StatusNotConfirmedIcon","$LayoutBoxItem","LayoutBoxItem","autoHeight","baseHeight","autoWidth","justifyContent","mediaQueries","breakPoints","smallerThanFullView","lessThan620px","LayoutRowItem_LayoutRowItem","$LayoutRowItemWrapper","LayoutRowItemWrapper","$LayoutInfoBoxItem","LayoutInfoBoxItem","childrenArray","reduce","outArr","child","react_is","push","console","error","labelElement","shift","childrenArrayRender"],"mappings":"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","file":"js/a82adf603eb5f7f6d260.bundle.js","sourcesContent":["import styled, { css } from \"../styled-components\";\nimport * as React from \"react\";\n\nexport interface ILabelProps {\n    arrow?: boolean;\n    disabled?: boolean;\n    className?: string;\n}\n\nconst $Label: React.StatelessComponent<ILabelProps> = ({ children, className }) => (\n    <div className={className}>{children}</div>\n);\n\nexport const Label = styled($Label)`\n    font-size: 12px;\n    line-height: 12px;\n    height: 12px;\n    text-transform: uppercase;\n    background-color: ${props => (\n        props.arrow ?\n        (\n            props.disabled ?\n            props.theme.colors.arrowLabelBgDisabled :\n            props.theme.colors.arrowLabelBg\n        ) :\n        \"transparent\"\n    )};\n    font-weight: 600;\n    letter-spacing: .5px;\n    padding: 4px 8px;\n    margin-right: ${props => props.arrow ? \"10px\" : \"0\"};\n    color: ${props => (\n        props.arrow ?\n        props.theme.colors.arrowLabel :\n        props.theme.colors.label\n    )};\n\n    /**\n     * When is the first label in a row the width of the container (LayoutRowItemWrapper) is 200px + 2*8px padding,\n     * and the display: flex along with justify-content: flex-end ensures that the label is right aligned.\n     * However, if the label is long enough (bigger than 200px) to wrap, the Label div will occupy all the container\n     * width, and the text will be aligned to right thanks to the rule below.\n     */\n    text-align: right;\n\n    ${props => props.arrow ? css`\n    position: relative;\n    &::before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: -10px;\n        border-top: 10px solid transparent;\n        border-bottom: 10px solid transparent;\n        border-left: 10px solid ${props.disabled ?\n            props.theme.colors.arrowLabelBgDisabled :\n            props.theme.colors.arrowLabelBg\n        };\n        transform: scaleX(.8);\n        transform-origin: center left;\n    }\n    ` : \"\"}\n`;\n","import styled, { css } from \"../../../styled-components\";\nimport * as React from \"react\";\n\ninterface ILayoutRowWrapperProps {\n    className?: string;\n    smallScreen?: boolean;\n    centerContent?: boolean;\n    onResize?(width: number): void;\n}\n\nclass $LayoutRowWrapper extends React.Component<ILayoutRowWrapperProps> {\n    private divElement: HTMLDivElement | null;\n    private divWidth = 0;\n    render() {\n        return (\n            <div className={this.props.className} ref={r => { this.divElement = r; }}>\n                {this.props.children}\n            </div>\n        );\n    }\n    onResize = () => {\n        if (this.props.onResize) {\n            this.props.onResize(this.divWidth);\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n        this.handleResize();\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.handleResize);\n    }\n    handleResize = () => {\n        if (this.divElement) {\n            this.divWidth = this.divElement.clientWidth;\n            this.onResize();\n        }\n    }\n}\n\n/** @internal */\nexport const LayoutRowWrapper = styled($LayoutRowWrapper)`\n    display: ${({ smallScreen }) => smallScreen ? \"block\" : \"flex\"};\n    ${({ centerContent }) => centerContent ? css`\n        justify-content: center;\n    ` : \"\"};\n`;\n","import * as React from \"react\";\nimport { ILayoutRowItemProps, LayoutRowItem } from \"./LayoutRowItem\";\nimport { LayoutRowWrapper } from \"./internal/LayoutRowWrapper\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\n\n/**\n * This class is responsible with the layout of the content page\n * Each row of data contains one or more items of information\n * Each box contains a Label and one or more boxes\n */\ninterface ILayoutResponsiveOptions {\n    ignoreFirstLabel?: \"forMobile\" | \"forLowRes\";\n}\n\ninterface ILayoutRowProps {\n    /**\n     * The minimum required width for that row to safely render all items on a single row\n     * TODO: Move minWidth to ILayoutResponsiveOptions\n     */\n    minWidth?: number;\n    responsive?: ILayoutResponsiveOptions;\n}\n\n@observer\nexport class LayoutRow extends React.Component<ILayoutRowProps> {\n    @observable\n    private smallScreen = false;\n\n    @observable\n    private isFirstLabelIgnored = false;\n\n    // validate that c is an instance of LayoutRowItem\n    private isLayoutRowItemInstance(c: React.ReactChild) {\n        let childIsLayoutRowItem = false;\n        try {\n            const childType = (c as React.ReactElement<any>).type;\n            childIsLayoutRowItem = (childType as typeof LayoutRowItem)._brand === \"layoutRowItem\";\n        } catch (e) {\n            // silent fail, assume that c is not a LayoutRowItem instance\n        }\n        return childIsLayoutRowItem;\n    }\n\n    render() {\n        /**\n         * We need to filter out the empty children, but we can't use React.Children.toArray, because it\n         * breaks the keys. We keep a separate index counter and skip through the nulls\n         */\n        let i = 0;\n\n        /**\n         * If it's a small screen render each RowItem as an independent Row\n         */\n        if (this.smallScreen) {\n            return React.Children.map(this.props.children, c => {\n                if (c === null || c === void 0) {\n                    // Just return and don't increment counter\n                    return c;\n                }\n\n                const childIsLayoutRowItem = this.isLayoutRowItemInstance(c);\n                return (\n                    <LayoutRowWrapper\n                        smallScreen={this.smallScreen} onResize={this.onResize} centerContent={this.isFirstLabelIgnored}\n                    >\n                        { childIsLayoutRowItem ? React.cloneElement(\n                            c as React.ReactElement<ILayoutRowItemProps>,\n                            {isBeginningOfRow: true, fullRow: true, ignoreFirstLabel: this.isFirstLabelIgnored}\n                        ) : c }\n                    </LayoutRowWrapper>\n                );\n            });\n        } else {\n            /**\n             * ... otherwise render as normal, one row\n             */\n            return (\n                <LayoutRowWrapper\n                    smallScreen={this.smallScreen} onResize={this.onResize} centerContent={this.isFirstLabelIgnored}\n                >\n                    { React.Children.map(this.props.children, c => {\n                        if (c === null || c === void 0) {\n                            // Just return and don't increment counter\n                            return c;\n                        }\n\n                        const childIsLayoutRowItem = this.isLayoutRowItemInstance(c);\n                        return childIsLayoutRowItem ? React.cloneElement(\n                            c as React.ReactElement<ILayoutRowItemProps>,\n                            {isBeginningOfRow: !i++ || this.smallScreen, ignoreFirstLabel: this.isFirstLabelIgnored}\n                        ) : c;\n                    }) }\n                </LayoutRowWrapper>\n            );\n        }\n    }\n\n    private onResize = (width: number) => {\n        this.smallScreen = this.props.minWidth ?\n            width <= this.props.minWidth :\n            false;\n\n        if (!this.props.responsive || !this.props.responsive.ignoreFirstLabel) {\n            return;\n        }\n        this.isFirstLabelIgnored = (this.props.responsive.ignoreFirstLabel === \"forLowRes\" && width < 540)\n            || (this.props.responsive.ignoreFirstLabel === \"forMobile\" && width < 460);\n    }\n}\n","import * as React from \"react\";\nimport styled from \"../../styled-components\";\nimport { Spacer } from \"../Spacer\";\n\nexport interface ILayoutSectionProps {\n    useWrapper?: boolean;\n}\n\nconst LayoutSectionWrapper = styled.div`\n    flex: 1 1 auto;\n    box-sizing: border-box;\n`;\n\nexport class LayoutSection extends React.Component<ILayoutSectionProps> {\n    render() {\n        let children = React.Children.toArray(this.props.children);\n\n        return children.length ?\n            (\n            <>\n                {\n                    this.props.useWrapper ?\n                    <LayoutSectionWrapper>\n                        { this.props.children }\n                    </LayoutSectionWrapper> :\n                    this.props.children\n                }\n                <Spacer height=\"48px\" />\n            </> ) :\n            null;\n    }\n}\n","import * as React from \"react\";\nimport { NumberFormatter } from \"../util/internal/locale/NumberFormatter\";\nimport { BigNumber } from \"../util/BigNumber\";\nimport { BigNumberFormatter } from \"../util/internal/locale/BigNumberFormatter\";\n\nexport interface INumberProps {\n    value: number | BigNumber;\n    locale: string;\n}\n\nexport class Number extends React.Component<INumberProps> {\n    render() {\n        let { value, locale } = this.props;\n        return typeof value !== \"number\" ?\n            new BigNumberFormatter().format(value, locale) :\n            new NumberFormatter().format(value, locale);\n    }\n}\n","/** @internal */\nexport class NumberFormatter {\n    format(value: number, locale: string) {\n        return value.toLocaleString(locale);\n    }\n}\n","import * as datetimeDifference from \"datetime-difference\";\n\ntype TimeUnit = \"years\" | \"months\" | \"days\" | \"hours\" | \"minutes\" | \"seconds\";\ntype RelativeTimeKey = \"s\" | \"ss\" | \"m\" | \"mm\" | \"h\" | \"hh\" | \"d\" | \"dd\" | \"M\" | \"MM\" | \"y\" | \"yy\";\n\nexport type IRelativeTimeTranslations = Record<RelativeTimeKey | \"future\" | \"past\", string>;\n\nconst defaultTranslations: IRelativeTimeTranslations = {\n    future: \"in %s\",\n    past: \"%s ago\",\n    s: \"1 second\",\n    ss: \"%d seconds\",\n    m: \"1 minute\",\n    mm: \"%d minutes\",\n    h: \"1 hour\",\n    hh: \"%d hours\",\n    d: \"1 day\",\n    dd: \"%d days\",\n    M: \"1 month\",\n    MM: \"%d months\",\n    y: \"1 year\",\n    yy: \"%d years\"\n};\n\n/** Maps time units used by datetime-difference to time unit codes for relative time localized strings  */\nlet unitCodes: Record<TimeUnit, RelativeTimeKey> = {\n    years: \"y\",\n    months: \"M\",\n    days: \"d\",\n    hours: \"h\",\n    minutes: \"m\",\n    seconds: \"s\"\n};\n\nexport class RelativeTimeFormatter {\n    constructor(private translations: IRelativeTimeTranslations = defaultTranslations) {\n    }\n\n    /**\n     * Computes the date/time difference d1 - d2 and returns a formatted localized string\n     * e.g. \"5 days 6 hours ago\", if d1 > d2\n     *  or \"in 5 days 6 hours\", if d2 > d1\n     *\n     * @param d1 unix timestamp (millis)\n     * @param d2 unix timestamp (millis)\n     */\n    formatDiff(d1: number, d2: number) {\n        let formatted = this.format(d1, d2);\n        return this.formatRelativeTime(formatted, d1 < d2);\n    }\n\n    /**\n     * Formats an interval given in miliseconds to a human readable localized string\n     * Computes the date/time difference d1 - d2 and returns a formatted localized string\n     * e.g. \"5 days 6 hours\"\n     *\n     * @param intv number (millis)\n     */\n    formatInterval(intv: number) {\n        let present = new Date().getTime();\n        let before = present - intv;\n\n        return this.format(present, before);\n    }\n\n    private format(d1: number, d2: number) {\n        let diff = datetimeDifference(new Date(d1), new Date(d2));\n        let units: TimeUnit[] = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n        let firstSignificantIdx = units.findIndex(unit => diff[unit] !== 0);\n        if (firstSignificantIdx === -1) {\n            // Time difference is 0\n            return this.humanizeDiffUnit(0, \"seconds\");\n        } else {\n            let formatted = \"\";\n            let firstUnit = units[firstSignificantIdx];\n            formatted += this.humanizeDiffUnit(diff[firstUnit], firstUnit);\n\n            // We don't show the 2nd time unit if 1st time unit is minutes or seconds\n            if (firstSignificantIdx + 2 < units.length) {\n                let secondUnit = units[firstSignificantIdx + 1];\n                if (diff[secondUnit] !== 0) {\n                    formatted += \" \" + this.humanizeDiffUnit(diff[secondUnit], secondUnit);\n                }\n            }\n\n            return formatted;\n        }\n    }\n\n    /**\n     * Outputs a human readable text for a given time value + unit, with proper pluralization\n     *\n     * @param value uint\n     * @param unit\n     */\n    private humanizeDiffUnit(value: number, unit: TimeUnit) {\n        let unitCode = value === 1 ?\n            unitCodes[unit] :\n            unitCodes[unit] + unitCodes[unit] as RelativeTimeKey;\n\n        return this.translations[unitCode].replace(/%d/i, \"\" + value);\n    }\n\n    /**\n     * Format a human-readable time duration (e.g. \"2 minutes\") as past or future time\n     * (e.g. \"2 minutes ago\" or \"in 2 minutes\")\n     */\n    private formatRelativeTime(value: string, future: boolean) {\n        return this.translations[future ? \"future\" : \"past\"].replace(/%s/i, value);\n    }\n}\n","import * as React from \"react\";\n\nconst DEFAULT_THRESHOLD = 5;\n\nexport interface IClickThresholdProps {\n    threshold?: number;\n    onClick(): void;\n}\n\n/**\n * Component that allows clicks within a given threshold.\n *\n * React click events trigger even if the mouse was moved significantly between mouse down and mouse up events\n * (e.g. dragging or text selection)\n */\nexport class ClickThreshold extends React.Component<IClickThresholdProps> {\n    static defaultProps: Partial<IClickThresholdProps> = {\n        threshold: DEFAULT_THRESHOLD\n    };\n\n    private mouseDownCoords: {x: number; y: number};\n\n    private get threshold() {\n        return this.props.threshold!;\n    }\n\n    render() {\n        return (\n            <div onMouseDown={this.onMouseDown} onMouseUp={this.onMouseUp}>\n                {this.props.children}\n            </div>\n        );\n    }\n\n    private onMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n        this.mouseDownCoords = {\n            x: e.clientX,\n            y: e.clientY\n        };\n    }\n\n    private onMouseUp = (e: React.MouseEvent<HTMLDivElement>) => {\n        if (Math.abs(e.clientX - this.mouseDownCoords.x) <= this.threshold &&\n            Math.abs(e.clientY - this.mouseDownCoords.y) <= this.threshold\n        ) {\n            this.props.onClick();\n        }\n    }\n}\n","import * as React from \"react\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { ValueBox, IValueBoxProps } from \"../../layout/content/box/ValueBox\";\nimport { RelativeTimeFormatter, IRelativeTimeTranslations } from \"../../util/time/RelativeTimeFormatter\";\nimport { TooltipRegular } from \"../../overlay/tooltip/TooltipRegular\";\nimport { ClickThreshold } from \"../../util/react/ClickThreshold\";\nimport styled from \"../../styled-components\";\nimport { CopyValueButton } from \"../../control/button/CopyValueButton\";\nimport { IClipboard } from \"../IClipboard\";\n\nconst TimeElapsedContentRoot = styled.div`\n    user-select: none;\n    cursor: pointer;\n`;\n\nconst CopyValueButtonWrapper = styled.div`\n    margin: 0 0 0 16px;\n`;\n\nenum DisplayMode {\n    AbsoluteTime,\n    RelativeTime\n}\n\nexport { IRelativeTimeTranslations } from \"../../util/time/RelativeTimeFormatter\";\n\nexport interface ITimeElapsedBoxProps {\n    /** Unix timestamp of event for which the elapsed time is calculated */\n    timestamp: number;\n    nonclickable?: boolean;\n    locale: string | undefined;\n    /**\n     * Translations: 'future' and 'past' use %s, all others use %d for replacements.\n     * If undefined, uses default English translations\n     *\n     * Example: { future: \"in %s\", past: \"%s ago\", s: \"1 second\", ss: \"%d seconds\", ... }\n     */\n    translations: IRelativeTimeTranslations | undefined;\n    clipboard: IClipboard;\n    variant?: IValueBoxProps[\"variant\"];\n}\n\n@observer\nexport class TimeElapsedBox extends React.Component<ITimeElapsedBoxProps> {\n    @observable\n    private currentTime: number;\n    @observable\n    private displayMode = DisplayMode.RelativeTime;\n    private timeoutId: number;\n\n    componentDidMount() {\n        this.updateCurrentTime();\n    }\n\n    componentDidUpdate(prevProps: ITimeElapsedBoxProps) {\n        if (this.props.timestamp !== prevProps.timestamp) {\n            if (this.timeoutId) {\n                clearTimeout(this.timeoutId);\n            }\n            this.updateCurrentTime();\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n    }\n\n    render() {\n        let value: string;\n        if (this.displayMode === DisplayMode.RelativeTime) {\n            value = new RelativeTimeFormatter(this.props.translations).formatDiff(\n                this.currentTime * 1000, this.props.timestamp * 1000\n            );\n        } else if (this.displayMode === DisplayMode.AbsoluteTime) {\n            value = new Date(this.props.timestamp * 1000).toLocaleDateString(this.props.locale, {\n                timeZone: \"UTC\",\n                timeZoneName: \"short\",\n                year: \"numeric\", month: \"long\", day: \"numeric\", hour: \"numeric\", minute: \"numeric\", second: \"numeric\"\n            });\n        } else {\n            throw new Error(`Unsupported display mode \"${DisplayMode[this.displayMode]}\"`);\n        }\n        let box = (\n            <ValueBox variant={this.props.variant}>\n                <TimeElapsedContentRoot>\n                    {value}\n                </TimeElapsedContentRoot>\n            </ValueBox>\n        );\n        return (\n            <TooltipRegular content={\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <div>{this.props.timestamp}</div>\n                    <CopyValueButtonWrapper>\n                        <CopyValueButton value={\"\" + this.props.timestamp} clipboard={this.props.clipboard}/>\n                    </CopyValueButtonWrapper>\n                </div>\n            }>\n                { this.props.nonclickable ? box :\n                <ClickThreshold onClick={this.cycleDisplayMode}>\n                    { box }\n                </ClickThreshold>\n                }\n            </TooltipRegular>\n        );\n    }\n\n    private cycleDisplayMode = () => {\n        if (this.displayMode === DisplayMode.RelativeTime) {\n            this.displayMode = DisplayMode.AbsoluteTime;\n        } else if (this.displayMode === DisplayMode.AbsoluteTime) {\n            this.displayMode = DisplayMode.RelativeTime;\n        } else {\n            throw new Error(`Unknown display mode \"${this.displayMode}`);\n        }\n    }\n\n    private updateCurrentTime = () => {\n        this.currentTime = Math.floor(Date.now() / 1000);\n        this.timeoutId = setTimeout(this.updateCurrentTime, this.computeRefreshInterval());\n    }\n\n    private computeRefreshInterval() {\n        // Refresh every second if interval is under a minute, or every minute otherwise\n        return this.currentTime - this.props.timestamp > 60 ? 60000 : 1000;\n    }\n}\n","\"use strict\";\n\nmodule.exports = function datetimeDiff (from, to) {\n\n    const min = [-Infinity, 1, 1, 0, 0, 0, 0];\n    const max = [Infinity, 12, null, 24, 60, 60, 1000];\n\n    if (to < from) {\n        const temp = to;\n        to = from;\n        from = temp;\n    }\n\n    let start = [from.getUTCFullYear(), from.getUTCMonth() + 1, from.getUTCDate(), from.getUTCHours(),\n            from.getUTCMinutes(), from.getUTCSeconds(), from.getUTCMilliseconds()],\n        end = [to.getUTCFullYear(), to.getUTCMonth() + 1, to.getUTCDate(), to.getUTCHours(), to.getUTCMinutes(),\n            to.getUTCSeconds(), to.getUTCMilliseconds()],\n        i = 7;\n\n    const dec = (i) => {\n        --end[i];\n        while (end[i] < min[i]) {\n            const r = dec(i - 1);\n            end[i] += max[i] === null\n                ? r\n                : max[i];\n        }\n        return i === 1 ? new Date(Date.UTC(end[0], end[1], 0)).getUTCDate() : max[i + 1];\n    };\n\n    while (i > 0) {\n        --i;\n        let diff = end[i] - start[i];\n        while (diff < 0) {\n            end[i] += dec(i - 1);\n            diff = end[i] - start[i];\n        }\n        end[i] = diff;\n    }\n\n    return {\n        years: end[0],\n        months: end[1],\n        days: end[2],\n        hours: end[3],\n        minutes: end[4],\n        seconds: end[5],\n        milliseconds: end[6]\n    };\n\n};\n","import { BigNumber } from \"../BigNumber\";\n\n/** @internal */\nexport function weiToEth(wei: BigNumber) {\n    return wei.shiftedBy(-18);\n}\n\n/** @internal */\nexport function ethToWei(eth: BigNumber) {\n    return eth.shiftedBy(18);\n}\n\n/** @internal */\nexport function weiToGwei(wei: BigNumber) {\n    return wei.shiftedBy(-9);\n}\n","/**\n * Returns the thousands (group) or decimal number separators for the given locale\n *\n * NB: Relies on Intl.NumberFormat and fallsback to simple detection with Number.prototype.toLocaleString()\n *\n * @internal\n */\nexport function getNumberSeparator(locale: string, separatorType: \"decimal\" | \"group\") {\n    let numberFormat: any = Intl.NumberFormat(locale);\n\n    if (numberFormat.formatToParts) {\n        return numberFormat\n            .formatToParts(1000.1)\n            .find((part: any) => part.type === separatorType)\n            .value as string;\n    }\n\n    if (separatorType === \"group\") {\n        return (1000).toLocaleString().replace(/[0-9]/g, \"\");\n    } else {\n        return 1.1.toLocaleString().replace(/[0-9]/g, \"\");\n    }\n}\n","import { BigNumber, Format } from \"../../BigNumber\";\nimport { getNumberSeparator } from \"./numberFormat\";\n\ninterface IFormatterOptions {\n    minimumFractionDigits?: number;\n    maximumFractionDigits?: number;\n}\n\n/**\n * Outputs a formatted, localized string representation of a BigNumber,\n * in the same fashion as Number.prototype.toLocaleString\n *\n * @internal\n */\nexport class BigNumberFormatter {\n    // HACK: We keep a static property of BigNumber Format objects and do lazy locale detection\n    // to avoid having to pass this class with DI through the entire app.\n    private static formats = new Map<string, Format>();\n\n    private static getBnFormat(locale: string) {\n        let fmt = this.formats.get(locale);\n        if (!fmt) {\n            fmt = {\n                decimalSeparator: getNumberSeparator(locale, \"decimal\"),\n                groupSeparator: getNumberSeparator(locale, \"group\"),\n                groupSize: 3\n            };\n            this.formats.set(locale, fmt);\n        }\n        return fmt;\n    }\n\n    format(num: BigNumber, locale: string, options: IFormatterOptions = {}) {\n        let fmt = BigNumberFormatter.getBnFormat(locale);\n        num = num.decimalPlaces(options.maximumFractionDigits !== void 0 ? options.maximumFractionDigits : 3);\n\n        if (options.minimumFractionDigits !== void 0) {\n            let fractionDigits = num.decimalPlaces();\n            if (fractionDigits < options.minimumFractionDigits) {\n                return num.toFormat(options.minimumFractionDigits, fmt);\n            }\n        }\n        return num.toFormat(fmt);\n    }\n}\n","import * as React from \"react\";\nimport { weiToEth } from \"../util/internal/wei\";\nimport { BigNumber } from \"../util/BigNumber\";\nimport { BigNumberFormatter } from \"../util/internal/locale/BigNumberFormatter\";\n\nexport interface IEthValueProps {\n    /** Value in wei */\n    wei: BigNumber;\n    /** Maximum number of decimals to show */\n    decimals?: number;\n    locale: string;\n    /** Display the currency symbol (ETH) ? */\n    showSymbol: boolean;\n}\n\nexport class EthValue extends React.Component<IEthValueProps> {\n    static defaultProps: Partial<IEthValueProps> = {\n        decimals: 4\n    };\n\n    render() {\n        return (\n            new BigNumberFormatter().format(weiToEth(this.props.wei), this.props.locale, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: this.props.decimals!\n            }) + (this.props.showSymbol ? \" ETH\" : \"\")\n        );\n    }\n}\n","import * as React from \"react\";\nimport { ValueBox, IValueBoxProps } from \"../../layout/content/box/ValueBox\";\nimport { EthValue } from \"../EthValue\";\nimport { BigNumber } from \"../../util/BigNumber\";\n\nexport interface IEthValueBoxProps {\n    /** Value in wei */\n    wei: BigNumber;\n    /** Maximum number of decimals to show (minimum 2) */\n    decimals?: number;\n    variant?: IValueBoxProps[\"variant\"];\n    locale: string;\n    /** Defaults to highlight if wei is non-zero, or secondary otherwise */\n    colors?: IValueBoxProps[\"colors\"];\n}\n\nexport class EthValueBox extends React.Component<IEthValueBoxProps> {\n    render() {\n        let { wei, locale, decimals } = this.props;\n        let colors = this.props.colors || (wei.isGreaterThan(0) ? \"primary\" : \"secondary\");\n\n        return (\n            <ValueBox variant={this.props.variant} colors={colors}>\n                <EthValue wei={wei} locale={locale} decimals={decimals} showSymbol={true} />\n            </ValueBox>\n        );\n    }\n}\n","import * as React from \"react\";\nimport styled from \"../../../styled-components\";\n\ninterface IHexDataItemProps {\n    value: string;\n}\n\nconst HexDataItemRoot = styled<IHexDataItemProps, \"div\">(\"div\")`\n    width: 32px;\n    height: 32px;\n    text-align: center;\n    line-height: 32px;\n    font-size: 14px;\n    font-weight: 600;\n    ${props => props.value === \"00\" ? \"color: \" + props.theme.colors.hexDataItem + \";\" : undefined};\n`;\n\n/** @internal */\nexport class HexDataItem extends React.PureComponent<IHexDataItemProps> {\n    render() {\n        return (\n            <HexDataItemRoot value={this.props.value}>{ this.props.value }</HexDataItemRoot>\n        );\n    }\n}\n","import * as React from \"react\";\nimport styled from \"../../../styled-components\";\nimport { HexDataItem } from \"./HexDataItem\";\n\nconst HexDataContentRoot = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\ninterface IHexDataContentProps {\n    data: string;\n}\n\n/** @internal */\nexport class HexDataContent extends React.PureComponent<IHexDataContentProps> {\n    render() {\n        return (\n            <HexDataContentRoot>\n                {this.props.data\n                    .match(/.{2}/g)!\n                    .map((v, idx) => <HexDataItem key={idx} value={v} />)}\n            </HexDataContentRoot>\n        );\n    }\n}\n","import * as React from \"react\";\nimport styled from \"../../styled-components\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { IconButton } from \"../../control/IconButton\";\nimport { IClipboard } from \"../IClipboard\";\nimport { CopyIcon } from \"../../icon/CopyIcon\";\nimport { HexDataContent } from \"./internal/HexDataContent\";\n\nconst CopyButtonWrapper = styled.div`\n    position: absolute;\n    top: 11px;\n    right: 8px;\n`;\n\nconst HexDataRoot = styled.div`\n    flex: 1 1 auto;\n    max-width: 512px;\n    padding: 8px 32px 8px 0;\n    position: relative;\n`;\n\nconst HexTextArea = styled.textarea`\n    height: 200px;\n    width: 100%;\n    max-width: 500px;\n    resize: none;\n    box-sizing: border-box;\n    padding: 7px 7px;\n`;\n\ninterface IHexDataProps {\n    data: string;\n    /** If this limit is reached, render as a textarea to improve performance */\n    dataLimit?: number;\n    clipboard: IClipboard;\n}\n\n@observer\nexport class HexData extends React.Component<IHexDataProps> {\n    static defaultProps: Partial<IHexDataProps> = {\n        dataLimit: 1024\n    };\n\n    @observable private hovered = false;\n\n    render() {\n        let dataLimit = this.props.dataLimit!;\n\n        return (\n            <HexDataRoot\n                onMouseEnter={this.mouseEnterHandler}\n                onMouseLeave={this.mouseLeaveHandler}\n            >\n                { this.props.data.length > dataLimit ?\n                    <HexTextArea readOnly value={this.props.data} /> :\n                    <HexDataContent data={this.props.data} />\n                }\n                { this.hovered && this.props.data.length <= dataLimit && <CopyButtonWrapper>\n                    <IconButton\n                        Icon={CopyIcon}\n                        color={theme => theme.colors.copyIcon}\n                        onClick={this.copyContent}\n                    />\n                </CopyButtonWrapper> }\n            </HexDataRoot>\n        );\n    }\n\n    private copyContent = () => {\n        this.props.clipboard.copy(this.props.data);\n    }\n    private mouseEnterHandler = () => {\n        this.hovered = true;\n    }\n    private mouseLeaveHandler = () => {\n        this.hovered = false;\n    }\n}\n","import * as React from \"react\";\nimport { ValueBox } from \"../../layout/content/box/ValueBox\";\nimport { Number } from \"../Number\";\nimport { BigNumber } from \"../../util/BigNumber\";\n\nexport interface INumberBoxProps {\n    value: number | BigNumber;\n    locale: string;\n}\n\nexport class NumberBox extends React.Component<INumberBoxProps> {\n    render() {\n        let { value, locale } = this.props;\n        return (\n            <ValueBox><Number value={value} locale={locale} /></ValueBox>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { SvgIcon, ISvgIconProps } from \"../util/react/SvgIcon\";\n\nlet uniqueId = 0;\n\ninterface IStatusSomeConfirmedIconProps extends ISvgIconProps {\n}\n\nexport class StatusSomeConfirmedIcon extends React.PureComponent<IStatusSomeConfirmedIconProps> {\n    private uniqueId = \"icon-status-some-confirmed-\" + uniqueId++;\n\n    render() {\n        return (\n            <SvgIcon {...this.props}>\n                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <mask id={`${this.uniqueId}-mask-2`} fill=\"white\">\n                        <polygon points=\"0 0 24 0 24 24 0 24\"></polygon>\n                    </mask>\n                    <path d={\n                        // tslint:disable-next-line:max-line-length\n                        \"M12,19.5 C11.1715729,19.5 10.5,18.8284271 10.5,18 C10.5,17.1715729 11.1715729,16.5 12,16.5 C12.8284271,16.5 13.5,17.1715729 13.5,18 C13.5,18.8284271 12.8284271,19.5 12,19.5 Z M17,19.5 C16.1715729,19.5 15.5,18.8284271 15.5,18 C15.5,17.1715729 16.1715729,16.5 17,16.5 C17.8284271,16.5 18.5,17.1715729 18.5,18 C18.5,18.8284271 17.8284271,19.5 17,19.5 Z M7,19.5 C6.17157288,19.5 5.5,18.8284271 5.5,18 C5.5,17.1715729 6.17157288,16.5 7,16.5 C7.82842712,16.5 8.5,17.1715729 8.5,18 C8.5,18.8284271 7.82842712,19.5 7,19.5 Z\"\n                    } fill=\"currentColor\" opacity=\"0.900000036\" mask={`url(#${this.uniqueId}-mask-2)`}></path>\n                    <polygon fill=\"currentColor\" fillRule=\"nonzero\"\n                        mask={`url(#${this.uniqueId}-mask-2)`} points={\n                        \"10.3 13.1 6 8.8 7.4 7.4 10.3 10.3 16.6 4 18 5.4\"\n                        }\n                    ></polygon>\n                </g>\n            </SvgIcon>\n        );\n    }\n}\n","import * as React from \"react\";\n\n// global unique key for every gauge (needed for SVG groups to stay separated)\nlet uniqueId = 0;\n\nexport interface IGaugeProps {\n    value: number;\n    min?: number;\n    max?: number;\n    width: number;\n    height: number;\n    backgroundColor?: string;\n    color?: string;\n    lineColor?: string;\n}\n\n/**\n * Simple SVG Gauge component\n *\n * See https://github.com/Reggino/react-svg-gauge/blob/master/src/Gauge.tsx\n */\nexport class Gauge extends React.Component<IGaugeProps> {\n    static defaultProps: Partial<IGaugeProps> = {\n        min: 0,\n        max: 100,\n        color: \"#FF9F1C\",\n        backgroundColor: \"#D9E4EF\",\n        lineColor: \"#334564\"\n    };\n\n    private uniqueFilterId: string;\n\n    private get min() {\n        return this.props.min!;\n    }\n\n    private get max() {\n        return this.props.max!;\n    }\n\n    private getPathValues(value: number) {\n        if (value < this.min) {\n            value = this.min;\n        }\n        if (value > this.max) {\n            value = this.max;\n        }\n\n        let dx = 0;\n        let dy = 0;\n\n        let alpha = (1 - (value - this.min) / (this.max - this.min)) * Math.PI;\n        let Ro = this.props.width / 2;\n        let Ri = Ro - this.props.width / 5;\n\n        let Cx = this.props.width / 2 + dx;\n        let Cy = this.props.height + dy;\n\n        let Xo = this.props.width / 2 + dx + Ro * Math.cos(alpha);\n        let Yo = this.props.height - (this.props.height - Cy) - Ro * Math.sin(alpha);\n        let Xi = this.props.width / 2 + dx + Ri * Math.cos(alpha);\n        let Yi = this.props.height - (this.props.height - Cy) - Ri * Math.sin(alpha);\n\n        return { alpha, Ro, Ri, Cx, Cy, Xo, Yo, Xi, Yi };\n    }\n\n    private getPath(value: number) {\n        let { Ro, Ri, Cx, Cy, Xo, Yo, Xi, Yi } = this.getPathValues(value);\n\n        let path = \"M\" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"L\" + (Cx - Ro) + \",\" + Cy + \" \";\n        path += \"A\" + Ro + \",\" + Ro + \" 0 0 1 \" + Xo + \",\" + Yo + \" \";\n        path += \"L\" + Xi + \",\" + Yi + \" \";\n        path += \"A\" + Ri + \",\" + Ri + \" 0 0 0 \" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"Z \";\n\n        return path;\n    }\n\n    private getLinePath(value: number) {\n        let { Xo, Yo, Xi, Yi } = this.getPathValues(value);\n\n        let path = \"M\" + Xo + \",\" + Yo + \" \";\n        path += \"L\" + Xi + \",\" + Yi + \" \";\n        path += \"Z \";\n\n        return path;\n    }\n\n    render() {\n        if (!this.uniqueFilterId) {\n            this.uniqueFilterId = \"filter_\" + uniqueId++;\n        }\n\n        return (\n            <svg height=\"100%\" version=\"1.1\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"\n                style={{\n                    width: this.props.width, height: this.props.height\n                }}>\n                <path fill={this.props.backgroundColor} stroke=\"none\" d={this.getPath(this.max)} />\n                <path fill={this.props.color} stroke=\"none\" d={this.getPath(this.props.value)} />\n                <path stroke={this.props.lineColor} d={this.getLinePath(this.props.value)} />\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { ValueBox } from \"../../layout/content/box/ValueBox\";\n\ninterface IGasPercentageBoxProps {\n}\n\nexport const GasPercentageBox: React.StatelessComponent<IGasPercentageBoxProps> = ({ children }) => (\n    <ValueBox\n        colors={(theme) => ({\n            text: theme.colors.gasPercentageBoxText,\n            background: theme.colors.valueBox.primary.background\n        })}\n    >\n        { children }\n    </ValueBox>\n);\n","import * as React from \"react\";\nimport { ValueBox } from \"../../layout/content/box/ValueBox\";\nimport { Gauge } from \"../vis/Gauge\";\nimport { GasPercentageBox } from \"./GasPercentageBox\";\nimport { NumberBox } from \"./NumberBox\";\nimport { BigNumber } from \"../../util/BigNumber\";\n\nexport interface IGasUsedValueProps {\n    value: BigNumber;\n    limit: BigNumber;\n    locale: string;\n}\n\nexport class GasUsedValueBox extends React.Component<IGasUsedValueProps> {\n    render() {\n        let { value, limit, locale } = this.props;\n\n        // We can loose precision here\n        let percentFraction = value.dividedBy(limit).toNumber();\n\n        return (\n            <>\n                <ValueBox>\n                    <Gauge value={Math.floor(percentFraction * 100)} width={32} height={16} />\n                </ValueBox>\n                <NumberBox value={value} locale={locale} />\n                <GasPercentageBox>{percentFraction.toLocaleString(locale, {\n                    style: \"percent\", minimumFractionDigits: 0, maximumFractionDigits: 2})\n                }</GasPercentageBox>\n            </>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { SvgIcon, ISvgIconProps } from \"../util/react/SvgIcon\";\n\nlet uniqueId = 0;\n\ninterface IStatusNotConfirmedIconProps extends ISvgIconProps {\n}\n\nexport class StatusNotConfirmedIcon extends React.PureComponent<IStatusNotConfirmedIconProps> {\n    private uniqueId = \"icon-status-not-confirmed-\" + uniqueId++;\n\n    render() {\n        return (\n            <SvgIcon {...this.props}>\n                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <mask id={this.uniqueId + \"-mask-2\"} fill=\"white\">\n                        <polygon points=\"0 0 24 0 24 24 0 24\"></polygon>\n                    </mask>\n                    <path d={\n                        // tslint:disable-next-line:max-line-length\n                        \"M12,13.5 C11.1715729,13.5 10.5,12.8284271 10.5,12 C10.5,11.1715729 11.1715729,10.5 12,10.5 C12.8284271,10.5 13.5,11.1715729 13.5,12 C13.5,12.8284271 12.8284271,13.5 12,13.5 Z M17,13.5 C16.1715729,13.5 15.5,12.8284271 15.5,12 C15.5,11.1715729 16.1715729,10.5 17,10.5 C17.8284271,10.5 18.5,11.1715729 18.5,12 C18.5,12.8284271 17.8284271,13.5 17,13.5 Z M7,13.5 C6.17157288,13.5 5.5,12.8284271 5.5,12 C5.5,11.1715729 6.17157288,10.5 7,10.5 C7.82842712,10.5 8.5,11.1715729 8.5,12 C8.5,12.8284271 7.82842712,13.5 7,13.5 Z\"\n                    } fill=\"currentColor\" opacity=\"0.900000036\" mask={`url(#${this.uniqueId}-mask-2)`}></path>\n                </g>\n            </SvgIcon>\n        );\n    }\n}\n","import * as React from \"react\";\nimport styled from \"../../styled-components\";\nimport { ILayoutRowItemProps } from \"./LayoutRowItem\";\n\ninterface ILayoutBoxItemProps extends ILayoutRowItemProps {\n    className?: string;\n}\n\nconst $LayoutBoxItem: React.StatelessComponent<ILayoutBoxItemProps> = ({ children, className }) => (\n    <div className={className}>{children}</div>\n);\nexport const LayoutBoxItem = styled($LayoutBoxItem)`\n    display: flex;\n    align-items: center;\n    /* put this to auto for tx alignment */\n    height: ${({autoHeight, baseHeight}) => autoHeight ? \"auto\" : (baseHeight ? baseHeight + \"px\" : \"48px\")};\n    padding: 0 8px;\n    /* flex: 0 0 auto; put this to 1 1 for tx wrapping */\n    flex: ${({autoHeight}) => autoHeight ? \"1 1\" : \"0 0\"} auto;\n    width: ${props => (props.isBeginningOfRow && !props.autoWidth ? \"200px\" : \"auto\")};\n    justify-content: ${props => (\n        props.justifyContent ? props.justifyContent : (props.isBeginningOfRow ? \"flex-end\" : \"inherit\")\n    )};\n\n    @media ${props => props.theme.mediaQueries.breakPoints.smallerThanFullView} {\n        width: auto;\n        min-width: ${props => (props.isBeginningOfRow && !props.autoWidth ? \"125px\" : \"auto\")};\n    }\n\n    @media ${props => props.theme.mediaQueries.breakPoints.lessThan620px} {\n        width: auto;\n        min-width: ${props => (props.isBeginningOfRow && !props.autoWidth ? \"95px\" : \"auto\")};\n    }\n`;\n","import * as React from \"react\";\nimport styled from \"../../styled-components\";\nimport { LayoutBoxItem } from \"./LayoutBoxItem\";\nimport * as ReactIs from \"react-is\";\n\ninterface ILayoutRowItemWrapperProps {\n    fullRow?: boolean;\n    className?: string;\n}\n\nconst $LayoutRowItemWrapper: React.StatelessComponent<ILayoutRowItemWrapperProps> = ({\n    children,\n    className\n}) => (\n    <div className={className}>{children}</div>\n);\n\nconst LayoutRowItemWrapper = styled($LayoutRowItemWrapper)`\n    display: flex;\n    flex: ${props => props.fullRow ? \"1 1\" : \"0 0\"} auto;\n`;\n\ninterface ILayoutInfoBoxItemProps {\n    fullRow?: boolean;\n    className?: string;\n}\nconst $LayoutInfoBoxItem: React.StatelessComponent<ILayoutInfoBoxItemProps> = ({\n    children,\n    className\n}) => (\n    <div className={className}>{children}</div>\n);\nconst LayoutInfoBoxItem = styled($LayoutInfoBoxItem)`\n    display: flex;\n    flex: ${({fullRow}) => fullRow ? \"1 1\" : \"0 1\"} auto;\n    flex-wrap: wrap;\n`;\n\nexport interface ILayoutRowItemProps {\n    isBeginningOfRow?: boolean;\n    ignoreFirstLabel?: boolean;\n    fullRow?: boolean;\n    baseHeight?: number;\n    autoHeight?: boolean;\n    autoWidth?: boolean;\n    justifyContent?: string;\n}\n\nexport class LayoutRowItem extends React.PureComponent<ILayoutRowItemProps> {\n    static _brand = \"layoutRowItem\";\n    render() {\n        const childrenArray = React.Children.toArray(this.props.children)\n            .reduce((outArr, child) => {\n                if (ReactIs.isFragment(child)) {\n                    outArr.push(...React.Children.map((child.props as React.Props<{}>).children, c => {\n                        if (!ReactIs.isElement(c)) {\n                            // tslint:disable-next-line:no-console\n                            console.error(\n                                `Fragment passed to LayoutRowItem contains a child that is not a React.Element.`, c);\n                            return c;\n                        }\n                        return React.cloneElement(c, {});\n                    }));\n                } else {\n                    outArr.push(child);\n                }\n                return outArr;\n            }, [] as React.ReactChild[]);\n\n        const labelElement = childrenArray.shift();\n        return (\n            <LayoutRowItemWrapper fullRow={this.props.fullRow}>\n                { this.props.ignoreFirstLabel ? null :\n                    <LayoutBoxItem isBeginningOfRow={this.props.isBeginningOfRow} baseHeight={this.props.baseHeight}\n                        autoWidth={this.props.autoWidth}>\n                        { labelElement }\n                    </LayoutBoxItem>\n                }\n                { childrenArray.length === 1 ?\n                    this.childrenArrayRender(childrenArray) :\n                    <LayoutInfoBoxItem fullRow={this.props.fullRow}>\n                        { this.childrenArrayRender(childrenArray) }\n                    </LayoutInfoBoxItem>\n                }\n            </LayoutRowItemWrapper>\n        );\n    }\n\n    private childrenArrayRender(children: React.ReactChild[]) {\n        return children.map((c, idx) => {\n            return (\n                <LayoutBoxItem baseHeight={this.props.baseHeight} autoHeight={this.props.autoHeight}\n                    autoWidth={this.props.autoWidth} key={idx}\n                >\n                    { c }\n                </LayoutBoxItem>\n            );\n        });\n    }\n}\n"],"sourceRoot":""}